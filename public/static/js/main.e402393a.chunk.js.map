{"version":3,"sources":["redux/constants/userConstants.js","redux/actions/userActions.js","components/Navigation/index.jsx","screens/User/WelcomeScreen.js","assets/img-login.svg","components/UI/AccountHeader.jsx","screens/User/LoginScreen.js","redux/constants/testConstants.js","screens/User/RegisterScreen.js","redux/actions/testAction.js","screens/User/StartScreen.js","components/UI/Slider.jsx","redux/constants/questionConstant.js","redux/constants/questionConstants.js","redux/actions/questionAction.js","redux/constants/responseConstant.js","redux/constants/testscoreConstants.js","screens/User/TestScreen.js","redux/actions/testscoreAction.js","redux/actions/responseAction.js","screens/User/SuccessScreen.js","screens/User/forget.js","screens/User/changePassword.js","assets/user1.jpg","components/Navbar/index.js","components/Sidebar/index.js","assets/user12.png","components/Userfeed/Infobox.js","assets/icon.jpg","components/Widgetfeed/index.js","redux/constants/candidateConstants.js","screens/Dashboard.js","redux/actions/candidateAction.js","screens/AdminRegister.js","components/QuestionTable/index.js","screens/ViewQuestion.js","screens/Profile.js","redux/actions/testActions.js","redux/constants/sectionConstants.js","screens/QuestionBank.js","redux/actions/sectionActions.js","components/Header/index.js","screens/AdminLogin.js","assets/jobexam.jpg","screens/Test.js","screens/Section.js","screens/ViewAdmin.js","redux/constants/adminForgetPassword.js","screens/PasswordForgot.js","redux/actions/forgetPasswordAction.js","screens/ResetPassword.js","App.js","reportWebVitals.js","redux/store.js","redux/reducers/userReducers.js","redux/reducers/questionReducer.js","redux/reducers/testReducer.js","redux/reducers/responseReducer.js","redux/reducers/testscoreReducer.js","redux/reducers/questionReducers.js","redux/reducers/testReducers.js","redux/reducers/sectionReducers.js","redux/reducers/candidateReducers.js","redux/reducers/forgetPasswordReducer.js","index.js","components/UI/styles.module.css","components/Navigation/styles.module.css","screens/User/styles.module.css"],"names":["USER_REGISTRATION_REQUEST","USER_REGISTRATION_SUCCESS","USER_REGISTRATION_FAIL","USER_REGISTRATION_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","FORGET_PASSWORD_REQUEST","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAIL","CHANGE_PASSWORD_REQUEST","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAIL","USERS_REGISTRATION_REQUEST","USERS_REGISTRATION_SUCCESS","USERS_REGISTRATION_FAIL","USERS_REGISTRATION_RESET","USERS_LOGIN_REQUEST","USERS_LOGIN_SUCCESS","USERS_LOGIN_FAIL","USERS_LOGOUT","USERS_DETAILS_REQUEST","USERS_DETAILS_SUCCESS","USERS_DETAILS_FAIL","USER_VIEWADMIN_REQUEST","USER_VIEWADMIN_SUCCESS","USER_VIEWADMIN_FAIL","USER_SECTION_REQUEST","USER_SECTION_SUCCESS","USER_SECTION_FAIL","GETALLADMIN_REQUEST","GETALLADMIN_SUCCESS","GETALLADMIN_FAIL","GETCANDIDATESDETAILS_REQUEST","GETCANDIDATESDETAILS_SUCCESS","GETCANDIDATESDETAILS_FAIL","myDetails","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","error","message","getAllCandidatesdetails","adminLogin","console","log","Navigation","history","useHistory","useDispatch","user","useSelector","state","userDetails","useEffect","className","styles","navigation","title","to","btnContainer","paddingTop","firstName","onClick","localStorage","removeItem","setTimeout","push","WelcomeScreen","grid","card","customPadding","center","display","src","alt","AccountHeader","instruction","children","header","circle","logo","LoginScreen","useState","email","setEmail","password","setPassword","loading","pagePadding","status","isIndeterminate","color","form","onSubmit","e","preventDefault","post","setItem","JSON","stringify","loginUser","inputContainer","onChange","target","value","placeholder","GET_ALL_TEST_REQUEST","GET_ALL_TEST_SUCCESS","GET_ALL_TEST_FAIL","CREATE_TEST_REQUEST","CREATE_TEST_SUCCESS","CREATE_TEST_FAIL","CREATE_TEST_RESET","GET_TEST_REQUEST","GET_TEST_SUCCESS","GET_TEST_FAIL","RegisterScreen","setFirstname","lastName","setLastname","phone","setPhone","confirmPassword","setConfirmPassword","examType","setExamType","msg","setMsg","registration","success","test","getTest","registerUser","formGrid","map","item","i","_id","StartScreen","border","Slider","size","slider","indicator","style","width","QUESTION_REQUEST","QUESTION_SUCCESS","QUESTION_FAIL","QUESTIONS_REQUEST","QUESTIONS_SUCCESS","QUESTIONS_FAIL","QUESTIONS_RESET","TEST_REQUEST","TEST_SUCCESS","TEST_FAIL","USER_GETALLQUESTIONS_REQUEST","USER_GETALLQUESTIONS_SUCCESS","USER_GETALLQUESTIONS_FAIL","GET_QUESTION_BYID_REQUEST","GET_QUESTION_BYID_SUCCESS","GET_QUESTION_BYID_FAIL","DELETE_QUESTION_BYID_REQUEST","DELETE_QUESTION_BYID_SUCCESS","DELETE_QUESTION_BYID_FAIL","getQuestionsId","RESPONSE_REQUEST","RESPONSE_SUCCESS","RESPONSE_FAIL","TESTSCORE_REQUEST","TESTSCORE_SUCCESS","TESTSCORE_FAIL","TEST_TIME_REQUEST","TEST_TIME_SUCCESS","TEST_TIME_FAIL","TestScreen","Response","questions","getquestion","mytime","getTime","testTime","index","setIndex","selected_answers","setSelected_answers","questionLength","length","initialMinute","initialSeconds","minutes","setMinutes","seconds","setSeconds","question","lastpage","myInterval","setInterval","clearInterval","alert","removePadding","left","timer","section","newIndex","postResponse","reset","answers","id","name","htmlFor","purple","marginTop","SuccessScreen","Myscore","testscore","score","justifyCenter","scores","Forget","postforgetpassword","forgetpassword","ChangePassword","changepassword","Navbar","adminDetails","userAdmin","Sidebar","Infobox","count","Icon","Widgetfeed","candidates","getCandidate","user1","icon","candidate","GET_TOTALCANDIDATES_REQUEST","GET_TOTALCANDIDATES_SUCCESS","GET_TOTALCANDIDATES_FAIL","GET_CANDIDATESPASSED_REQUEST","GET_CANDIDATESPASSED_SUCCESS","GET_CANDIDATESPASSED_FAIL","GET_CANDIDATESFAILED_REQUEST","GET_CANDIDATESFAILED_SUCCESS","GET_CANDIDATESFAILED_FAIL","Dashboard","getQuestion","admin","myAllAdmin","totalCandidates","candidatepass","allCandidatePassed","candidatefail","allCandidateFailed","user12","AiOutlineBars","RiAdminFill","FaUserGraduate","BsCheckCircleFill","MdCancel","AdminRegister","setFirstName","setLastName","adminRegister","toast","useToast","description","duration","isClosable","registerAdmin","QuestionTable","indexOf","splice","handledelete","ViewQuestion","Profile","arr","CREATE_SECTION_REQUEST","CREATE_SECTION_SUCCESS","CREATE_SECTION_FAIL","CREATE_SECTION_RESET","GET_SECTION_REQUEST","GET_SECTION_SUCCESS","GET_SECTION_FAIL","GET_SECTION_BYID_REQUEST","GET_SECTION_BYID_SUCCESS","GET_SECTION_BYID_FAIL","QuestionBank","setQuestion","setAnswers","correct_answers","setCorrectAnswer","setSection","option","setOption","adminQuestions","tests","allTest","sections","examSection","postQuestion","event","getExamSection","removeOption","vaule","Header","AdminLogin","loginAdmin","image","Test","setTitle","newTest","createTest","jobexam","Section","setInstruction","setTimer","setTest","newSection","createSection","ViewAdmin","getViewAdmins","getadmin","ADMIN_FORGETPASSWORD_REQUEST","ADMIN_FORGETPASSWORD_SUCCESS","ADMIN_FORGETPASSWORD_FAIL","ADMIN_RESETPASSWORD_REQUEST","ADMIN_RESETPASSWORD_SUCCESS","ADMIN_RESETPASSWORD_FAIL","PasswordForgot","forgotPassword","adminForgotPassword","ResetPassword","resetPassword","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","userSections","testOptions","allSection","getAllQuestions","deleteQuestion","deleteById","userInfoFromStorage","getItem","parse","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e402393a.chunk.js","sourcesContent":["export const USER_REGISTRATION_REQUEST = \"USER_REGISTRATION_REQUEST\";\r\nexport const USER_REGISTRATION_SUCCESS = \"USER_REGISTRATION_SUCCESS\";\r\nexport const USER_REGISTRATION_FAIL = \"USER_REGISTRATION_FAIL\";\r\nexport const USER_REGISTRATION_RESET = \"USER_REGISTRATION_RESET\";\r\n\r\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\n\r\nexport const FORGET_PASSWORD_REQUEST = \"FORGET_PASSWORD_REQUEST\";\r\nexport const FORGET_PASSWORD_SUCCESS = \"FORGET_PASSWORD_SUCCESS\";\r\nexport const FORGET_PASSWORD_FAIL = \"FORGET_PASSWORD_FAIL\";\r\n\r\nexport const CHANGE_PASSWORD_REQUEST = \"CHANGE_PASSWORD_REQUEST\";\r\nexport const CHANGE_PASSWORD_SUCCESS = \"CHANGE_PASSWORD_SUCCESS\";\r\nexport const CHANGE_PASSWORD_FAIL = \"CHANGE_PASSWORD_FAIL\";\r\n\r\n/*ADMIN  */\r\n\r\nexport const USERS_REGISTRATION_REQUEST =\r\n    \"USERS_REGISTRATION_REQUEST\";\r\nexport const USERS_REGISTRATION_SUCCESS =\r\n    \"USERS_REGISTRATION_SUCCESS\";\r\nexport const USERS_REGISTRATION_FAIL =\r\n    \"USERS_REGISTRATION_FAIL\";\r\nexport const USERS_REGISTRATION_RESET =\r\n    \"USERS_REGISTRATION_RESET\";\r\n\r\nexport const USERS_LOGIN_REQUEST = \"USERS_LOGIN_REQUEST\";\r\nexport const USERS_LOGIN_SUCCESS = \"USERS_LOGIN_SUCCESS\";\r\nexport const USERS_LOGIN_FAIL = \"USERS_LOGIN_FAIL\";\r\nexport const USERS_LOGOUT = \"USERS_LOGOUT\";\r\n\r\nexport const USERS_DETAILS_REQUEST = \"USERS_DETAILS_REQUEST\";\r\nexport const USERS_DETAILS_SUCCESS = \"USERS_DETAILS_SUCCESS\";\r\nexport const USERS_DETAILS_FAIL = \"USERS_DETAILS_FAIL\";\r\n\r\nexport const USER_VIEWADMIN_REQUEST =\r\n    \"USER_VIEWADMIN_REQUEST\";\r\nexport const USER_VIEWADMIN_SUCCESS =\r\n    \"USER_VIEWADMIN_SUCCESS\";\r\nexport const USER_VIEWADMIN_FAIL = \"USER_VIEWADMIN_FAIL\";\r\n\r\nexport const USER_SECTION_REQUEST = \"USER_SECTION_REQUEST\";\r\nexport const USER_SECTION_SUCCESS = \"USER_SECTION_SUCCESS\";\r\nexport const USER_SECTION_FAIL = \"USER_SECTION_FAIL\";\r\n\r\nexport const GETALLADMIN_REQUEST = \"GETALLADMIN_REQUEST\";\r\nexport const GETALLADMIN_SUCCESS = \"GETALLADMIN_SUCCESS\";\r\nexport const GETALLADMIN_FAIL = \"GETALLADMIN_FAIL\";\r\n\r\nexport const GETCANDIDATESDETAILS_REQUEST =\r\n    \"GETCANDIDATESDETAILS_REQUEST\";\r\nexport const GETCANDIDATESDETAILS_SUCCESS =\r\n    \"GETCANDIDATESDETAILS_SUCCESS\";\r\nexport const GETCANDIDATESDETAILS_FAIL =\r\n    \"GETCANDIDATESDETAILS_FAIL\";\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport {\r\n    USER_REGISTRATION_FAIL,\r\n    USER_REGISTRATION_REQUEST,\r\n    USER_REGISTRATION_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    FORGET_PASSWORD_FAIL,\r\n    FORGET_PASSWORD_REQUEST,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    CHANGE_PASSWORD_FAIL,\r\n    CHANGE_PASSWORD_REQUEST,\r\n    CHANGE_PASSWORD_SUCCESS,\r\n    // ADMIN\r\n    USERS_REGISTRATION_FAIL,\r\n    USERS_REGISTRATION_REQUEST,\r\n    USERS_REGISTRATION_SUCCESS,\r\n    USERS_LOGIN_FAIL,\r\n    USERS_LOGIN_REQUEST,\r\n    USERS_LOGIN_SUCCESS,\r\n    USERS_DETAILS_FAIL,\r\n    USERS_DETAILS_REQUEST,\r\n    USERS_DETAILS_SUCCESS,\r\n    USERS_LOGOUT,\r\n    USER_SECTION_FAIL,\r\n    USER_SECTION_REQUEST,\r\n    USER_SECTION_SUCCESS,\r\n    GETALLADMIN_FAIL,\r\n    GETALLADMIN_SUCCESS,\r\n    GETALLADMIN_REQUEST,\r\n    GETCANDIDATESDETAILS_FAIL,\r\n    GETCANDIDATESDETAILS_SUCCESS,\r\n    GETCANDIDATESDETAILS_REQUEST,\r\n    USER_VIEWADMIN_FAIL,\r\n    USER_VIEWADMIN_SUCCESS,\r\n    USER_VIEWADMIN_REQUEST,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const registerUser =\r\n    (\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        phone,\r\n        password,\r\n        examType\r\n    ) =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch({ type: USER_REGISTRATION_REQUEST });\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const { data } = await axios.post(\r\n                \"/api/v1/candidate/\",\r\n                {\r\n                    firstName,\r\n                    lastName,\r\n                    email,\r\n                    phone,\r\n                    password,\r\n                    examType,\r\n                },\r\n                config\r\n            );\r\n            dispatch({\r\n                type: USER_REGISTRATION_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: USER_REGISTRATION_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const loginUser =\r\n    (email, password) => async (dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: USER_LOGIN_REQUEST,\r\n            });\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const { data } = await axios.post(\r\n                \"/api/v1/auth/\",\r\n                { email, password },\r\n                config\r\n            );\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data,\r\n            });\r\n            localStorage.setItem(\r\n                \"userInfo\",\r\n                JSON.stringify(data)\r\n            );\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_LOGIN_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.message\r\n                        ? error.response.data.message\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({\r\n        type: USER_LOGOUT,\r\n    });\r\n};\r\n\r\nexport const myDetails =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: USER_DETAILS_REQUEST });\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState();\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.get(\r\n                \"/api/v1/auth/account\",\r\n                config\r\n            );\r\n            dispatch({\r\n                type: USER_DETAILS_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_DETAILS_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const forgetpassword =\r\n    (email) => async (dispatch) => {\r\n        try {\r\n            dispatch({ type: FORGET_PASSWORD_REQUEST });\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const { data } = await axios.post(\r\n                \"/api/v1/auth/forgotPassword\",\r\n                { email },\r\n                config\r\n            );\r\n            dispatch({\r\n                type: FORGET_PASSWORD_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: FORGET_PASSWORD_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const changePassword =\r\n    (email) => async (dispatch) => {\r\n        try {\r\n            dispatch({ type: CHANGE_PASSWORD_REQUEST });\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const { data } = await axios.post(\r\n                \"/api/v1/auth/resetPassword/:resettoken\",\r\n                { email },\r\n                config\r\n            );\r\n            dispatch({\r\n                type: CHANGE_PASSWORD_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch({\r\n                type: CHANGE_PASSWORD_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n// ADMIN\r\nexport const registerAdmin =\r\n    (firstName, lastName, phone, email, password) =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch({ type: USERS_REGISTRATION_REQUEST });\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const { data } = await axios.post(\r\n                \"/api/v1/admin/\",\r\n                {\r\n                    firstName,\r\n                    lastName,\r\n                    phone,\r\n                    email,\r\n                    password,\r\n                },\r\n                config\r\n            );\r\n            dispatch({\r\n                type: USERS_REGISTRATION_SUCCESS,\r\n                payload: data,\r\n            });\r\n            console.log(firstName);\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USERS_REGISTRATION_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const loginAdmin =\r\n    (email, password) => async (dispatch) => {\r\n        try {\r\n            dispatch({ type: USERS_LOGIN_REQUEST });\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post(\r\n                \"/api/v1/auth/admin/\",\r\n                { email, password },\r\n                config\r\n            );\r\n\r\n            dispatch({\r\n                type: USERS_LOGIN_SUCCESS,\r\n                payload: data,\r\n            });\r\n\r\n            localStorage.setItem(\r\n                \"userInfo\",\r\n                JSON.stringify(data)\r\n            );\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USERS_LOGIN_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const adminLogout = () => (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({\r\n        type: USERS_LOGOUT,\r\n    });\r\n};\r\n\r\nexport const myAdminDetails =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: USERS_DETAILS_REQUEST });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.get(\r\n                \"/api/v1/admin/self\",\r\n                config\r\n            );\r\n            dispatch({\r\n                type: USERS_DETAILS_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USERS_DETAILS_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n\r\n            localStorage.removeItem(\"userInfo\");\r\n            dispatch({ type: USER_LOGOUT });\r\n        }\r\n    };\r\n\r\nexport const sectionUser =\r\n    (section) => async (dispatch) => {\r\n        try {\r\n            dispatch({ type: USER_SECTION_REQUEST });\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post(\r\n                \"/api/v1/section/\",\r\n                { section },\r\n                config\r\n            );\r\n\r\n            dispatch({\r\n                type: USER_SECTION_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_SECTION_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const getAllAdmin =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: GETALLADMIN_REQUEST,\r\n            });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(\r\n                \"/api/v1/admin/\",\r\n                config\r\n            );\r\n            dispatch({\r\n                type: GETALLADMIN_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GETALLADMIN_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const getAllCandidatesdetails =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: GETCANDIDATESDETAILS_REQUEST,\r\n            });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(\r\n                `/api/v1/test-score/`,\r\n                config\r\n            );\r\n            dispatch({\r\n                type: GETCANDIDATESDETAILS_SUCCESS,\r\n                payload: data,\r\n            });\r\n\r\n            console.log(data);\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GETCANDIDATESDETAILS_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const viewAllAdmindetails =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: USER_VIEWADMIN_REQUEST,\r\n            });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(\r\n                \"/api/v1/admin/\",\r\n                config\r\n            );\r\n            dispatch({\r\n                type: USER_VIEWADMIN_SUCCESS,\r\n                payload: data,\r\n            });\r\n\r\n            console.log(data);\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_VIEWADMIN_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styles from \"./styles.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    logOut,\r\n    myDetails,\r\n} from \"../../redux/actions/userActions\";\r\n\r\nconst Navigation = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const userDetails = useSelector(\r\n        (state) => state.userDetails\r\n    );\r\n    const { user } = userDetails;\r\n\r\n    useEffect(() => {\r\n        dispatch(myDetails());\r\n    }, [dispatch]);\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logOut());\r\n        setTimeout(() => history.push(\"/login\"), [1000]);\r\n    };\r\n    return (\r\n        <div className={styles.navigation}>\r\n            <div className={styles.title}>\r\n                <Link to=\"/\">\r\n                    <h3>E-Interview</h3>\r\n                </Link>\r\n            </div>\r\n            <div className={styles.btnContainer}>\r\n                {user && user ? (\r\n                    <>\r\n                        <h3 className={styles.paddingTop}>\r\n                            {\" \"}\r\n                            candidate:{\" \"}\r\n                            {user && user.firstName}\r\n                        </h3>\r\n                        <Link\r\n                            to=\"/#\"\r\n                            className=\"btn gold\"\r\n                            onClick={logoutHandler}\r\n                        >\r\n                            Log out\r\n                        </Link>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"drop\">\r\n                            <button className=\"btn white\">\r\n                                Sign In\r\n                            </button>\r\n                            <div className=\"drop-content\">\r\n                                <Link to=\"/login\">\r\n                                    Sign In\r\n                                </Link>\r\n                                <br />\r\n                                <hr />\r\n                                <Link to=\"/adminlogin\">\r\n                                    Admin Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <Link\r\n                            to=\"/signup\"\r\n                            className=\"btn gold\"\r\n                        >\r\n                            Sign Up\r\n                        </Link>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst WelcomeScreen = () => {\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <div className={styles.grid}>\r\n        <div className={`${styles.card} ${styles.customPadding}`}>\r\n          <h1>LBAN ELETRONIC INTERVIEW</h1>\r\n\r\n          <p>\r\n            Hiring and recruitment are important processes as they aim to bring\r\n            in talented people into an organisation. Employees are the backbone\r\n            of any business helping the company soar new heights by enhancing\r\n            productivity, growth, and success. It, therefore, goes without\r\n            saying that such processes should be planned well and carried out\r\n            with the utmost care in order to deliver effective results and\r\n            derive maximum benefits.\r\n          </p>\r\n          <br />\r\n          <br />\r\n          <div className={styles.center}>\r\n          <Link to=\"/login\" className=\"btn gold\">\r\n            Get Started\r\n          </Link>\r\n          </div>\r\n        </div>\r\n        <div className={`${styles.card} ${styles.center} ${styles.display}`}>\r\n          <img\r\n            src=\"https://static.vecteezy.com/system/resources/previews/002/779/618/non_2x/concept-of-online-exam-on-internet-woman-sitting-near-online-form-survey-on-laptop-questionnaire-web-learning-electronic-voting-illustration-vector.jpg\"\r\n            alt=\"Exam\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomeScreen;\r\n","export default __webpack_public_path__ + \"static/media/img-login.86af5540.svg\";","import React from \"react\";\r\nimport logo from \"../../assets/img-login.svg\";\r\nimport styles from \"./styles.module.css\";\r\nconst AccountHeader = ({ instruction, title, children }) => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <div className={styles.circle}>\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n      <h2>{title}</h2>\r\n      <p>{instruction}</p>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountHeader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport AccountHeader from \"../../components/UI/AccountHeader\";\r\nimport styles from \"./styles.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    Alert,\r\n    AlertIcon,\r\n    CircularProgress,\r\n    Center,\r\n} from \"@chakra-ui/react\";\r\nimport { loginUser } from \"../../redux/actions/userActions\";\r\n\r\nconst LoginScreen = ({ history }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(email, password));\r\n    };\r\n    const userLogin = useSelector(\r\n        (state) => state.userLogin\r\n    );\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            setTimeout(\r\n                () => history.push(\"/start\"),\r\n                [3000]\r\n            );\r\n        }\r\n    }, [userInfo, history, dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <Navigation />\r\n            <div className={styles.pagePadding}>\r\n                <AccountHeader\r\n                    instruction=\"Sign in to start your Test\"\r\n                    title=\"Welcome to e-Interview\"\r\n                />\r\n                {error && (\r\n                    <Alert status=\"error\">\r\n                        <AlertIcon />\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n                {loading ? (\r\n                    <Center>\r\n                        <CircularProgress\r\n                            isIndeterminate\r\n                            color=\"purple.300\"\r\n                        />\r\n                    </Center>\r\n                ) : (\r\n                    <div className={styles.form}>\r\n                        <form onSubmit={submitHandler}>\r\n                            <div\r\n                                className={\r\n                                    styles.inputContainer\r\n                                }\r\n                            >\r\n                                <input\r\n                                    type=\"email\"\r\n                                    onChange={(e) =>\r\n                                        setEmail(\r\n                                            e.target.value\r\n                                        )\r\n                                    }\r\n                                    value={email}\r\n                                    placeholder=\"Email Address\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                className={\r\n                                    styles.inputContainer\r\n                                }\r\n                            >\r\n                                <input\r\n                                    type=\"password\"\r\n                                    onChange={(e) =>\r\n                                        setPassword(\r\n                                            e.target.value\r\n                                        )\r\n                                    }\r\n                                    value={password}\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                className={\r\n                                    styles.inputContainer\r\n                                }\r\n                            >\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    value=\"Login\"\r\n                                    className=\"btn gold\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                className={\r\n                                    styles.inputContainer\r\n                                }\r\n                            >\r\n                                <p\r\n                                    className={\r\n                                        styles.center\r\n                                    }\r\n                                >\r\n                                    Don't Have an account?{\" \"}\r\n                                    <Link to=\"/signup\">\r\n                                        Sign Up\r\n                                    </Link>{\" \"}\r\n                                    <span\r\n                                        className={\r\n                                            styles.inputContainer\r\n                                        }\r\n                                    >\r\n                                        <Link to=\"/forget\">\r\n                                            Forget password?\r\n                                        </Link>\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","export const GET_ALL_TEST_REQUEST = \"GET_ALL_TEST_REQUEST\";\r\nexport const GET_ALL_TEST_SUCCESS = \"GET_ALL_TEST_SUCCESS\";\r\nexport const GET_ALL_TEST_FAIL = \"GET_ALL_TEST_FAIL\";\r\n\r\n// admin test constant\r\nexport const CREATE_TEST_REQUEST = 'CREATE_TEST_REQUEST'\r\nexport const CREATE_TEST_SUCCESS = 'CREATE_TEST_SUCCESS'\r\nexport const CREATE_TEST_FAIL = 'CREATE_TEST_FAIL'\r\nexport const CREATE_TEST_RESET = 'CREATE_TEST_RESET'\r\n\r\nexport const GET_TEST_REQUEST = 'GET_TEST_REQUEST'\r\nexport const GET_TEST_SUCCESS = 'GET_TEST_SUCCESS'\r\nexport const GET_TEST_FAIL = 'GET_TEST_FAIL'\r\n\r\nexport const DELETE_TEST_REQUEST = 'DELETE_TEST_REQUEST'\r\nexport const DELETE_TEST_SUCCESS = 'DELETE_TEST_SUCCESS'\r\nexport const DELETE_TEST_FAIL = 'DELETE_TEST_FAIL'\r\nexport const DELETE_TEST_RESET = 'DELETE_TEST_RESET'\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport AccountHeader from \"../../components/UI/AccountHeader\";\r\nimport styles from \"./styles.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Alert, AlertIcon, CircularProgress, Center } from \"@chakra-ui/react\";\r\nimport { registerUser } from \"../../redux/actions/userActions\";\r\nimport { USER_REGISTRATION_RESET } from \"../../redux/constants/userConstants\";\r\nimport { getTestTyper } from \"../../redux/actions/testAction\";\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [firstName, setFirstname] = useState(\"\");\r\n  const [lastName, setLastname] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [examType, setExamType] = useState(\"\");\r\n  const [msg, setMsg] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password === confirmPassword) {\r\n      dispatch(\r\n        registerUser(firstName, lastName, email, phone, password, examType)\r\n      );\r\n    } else {\r\n      setMsg(true);\r\n    }\r\n  };\r\n\r\n  const registration = useSelector((state) => state.registration);\r\n  const { loading, error, success } = registration;\r\n\r\n  if (success) {\r\n    setTimeout(() => history.push(\"/login\"), [5000]);\r\n    dispatch({ type: USER_REGISTRATION_RESET });\r\n  }\r\n\r\n  const getTest = useSelector((state) => state.getTest);\r\n  const { test } = getTest;\r\n\r\n  useEffect(() => {\r\n    dispatch(getTestTyper());\r\n  }, [dispatch]);\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <div className={styles.pagePadding}>\r\n        <AccountHeader\r\n          instruction=\"Sign up to create your account\"\r\n          title=\"Welcome to e-Interview\"\r\n        />\r\n        <div className={styles.form}>\r\n          {error && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          {success && (\r\n            <Alert status=\"success\">\r\n              <AlertIcon />\r\n              Registration Successful\r\n            </Alert>\r\n          )}\r\n          {msg && (\r\n            <div className={styles.inputContainer}>\r\n              <Alert status=\"error\">\r\n                <AlertIcon />\r\n                Password does not match\r\n              </Alert>\r\n            </div>\r\n          )}\r\n          {loading ? (\r\n            <Center>\r\n              <CircularProgress isIndeterminate color=\"purple.300\" />\r\n            </Center>\r\n          ) : (\r\n            <form onSubmit={submitHandler}>\r\n              <div className={styles.formGrid}>\r\n                <div className={styles.inputContainer}>\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={(e) => setFirstname(e.target.value)}\r\n                    value={firstName}\r\n                    placeholder=\"First Name\"\r\n                  />\r\n                </div>\r\n                <div className={styles.inputContainer}>\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={(e) => setLastname(e.target.value)}\r\n                    value={lastName}\r\n                    placeholder=\"Last Name\"\r\n                  />\r\n                </div>\r\n                <div className={styles.inputContainer}>\r\n                  <input\r\n                    type=\"tel\"\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                    value={phone}\r\n                    placeholder=\"Mobile Number\"\r\n                  />\r\n                </div>\r\n                <div className={styles.inputContainer}>\r\n                  <input\r\n                    type=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    value={email}\r\n                    placeholder=\"Email Address\"\r\n                  />\r\n                </div>\r\n                <div className={styles.inputContainer}>\r\n                  <input\r\n                    type=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    value={password}\r\n                    placeholder=\"Password\"\r\n                  />\r\n                </div>\r\n                <div className={styles.inputContainer}>\r\n                  <input\r\n                    type=\"password\"\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    value={confirmPassword}\r\n                    placeholder=\"Confirm Password\"\r\n                  />\r\n                </div>\r\n                <div className={styles.inputContainer}>\r\n                  <select onChange={(e) => setExamType(e.target.value)}>\r\n                    <label>Select Exam Type</label>\r\n                    <option>Select</option>\r\n                    {test &&\r\n                      test.map((item, i) => (\r\n                        <option value={item._id} key={i}>\r\n                          {item.title}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className={styles.inputContainer}>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Create Account\"\r\n                  className=\"btn gold\"\r\n                />\r\n              </div>\r\n              <div className={styles.inputContainer}>\r\n                <p className={styles.center}>\r\n                  Already Have an account? <Link to=\"/login\">Login</Link>\r\n                </p>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ALL_TEST_SUCCESS,\r\n  GET_ALL_TEST_REQUEST,\r\n  GET_ALL_TEST_FAIL,\r\n} from \"../constants/testConstants\";\r\n\r\nexport const getTestTyper = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: GET_ALL_TEST_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/v1/test/\", config);\r\n    dispatch({\r\n      type: GET_ALL_TEST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ALL_TEST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport AccountHeader from \"../../components/UI/AccountHeader\";\r\nimport styles from \"./styles.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { myDetails } from \"../../redux/actions/userActions\";\r\n\r\nconst StartScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const userDetails = useSelector(\r\n        (state) => state.userDetails\r\n    );\r\n    const { user } = userDetails;\r\n\r\n    useEffect(() => {\r\n        dispatch(myDetails());\r\n    }, [dispatch]);\r\n\r\n    const clickHandler = () => {\r\n        setTimeout(() => history.push(\"/test\"), [3000]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navigation />\r\n            <div className={`${styles.pagePadding}`}>\r\n                <div\r\n                    className={`${styles.pagePadding} ${styles.border}`}\r\n                >\r\n                    <AccountHeader\r\n                        instruction={`Welcome ${\r\n                            user && user.firstName\r\n                        }`}\r\n                    >\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet,\r\n                            consectetur adipiscing elit, sed\r\n                            do eiusmod tempor <br />{\" \"}\r\n                            incididunt labore et dolore\r\n                            magna nisi ut aliquip ex ea\r\n                            commodo <br />\r\n                            consequat. Duis aute irure\r\n                            aliqua. Ut enim ad minim veniam,\r\n                            quis nostrud exercitation <br />\r\n                            ullamco laboris dolor in\r\n                            reprehenderit in voluptate velit\r\n                            esse cillum dolore eu\r\n                        </p>\r\n                    </AccountHeader>\r\n                    <br />\r\n                    <br />\r\n                    <div className={styles.center}>\r\n                        <Link\r\n                            to=\"/start\"\r\n                            className=\"btn gold\"\r\n                            onClick={clickHandler}\r\n                        >\r\n                            Start\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={styles.form}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StartScreen;\r\n","import React from 'react'\r\nimport styles from './styles.module.css'\r\n\r\nconst Slider = ({ size }) => {\r\n    return (\r\n        <div className={styles.slider}>\r\n            <div className={styles.indicator} style={{ width: `${size}%` }}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider\r\n","export const QUESTION_REQUEST = \"QUESTION_REQUEST\";\r\nexport const QUESTION_SUCCESS = \"QUESTION_SUCCESS\";\r\nexport const QUESTION_FAIL = \"QUESTION_FAIL\";\r\n\r\nexport const SCORE_REQUEST = \"SCORE_REQUEST\";\r\nexport const SCORE_SUCCESS = \"SCORE_SUCCESS\";\r\nexport const SCORE_FAIL = \"SCORE_FAIL\";\r\n\r\n// export const DELETE_QUESTION_BYID_REQUEST =\r\n//     \"DELETE_QUESTION_BYID_REQUEST\";\r\n// export const DELETE_QUESTION_BYID_SUCCESS =\r\n//     \"DELETE_QUESTION_BYID_SUCCESS\";\r\n// export const DELETE_QUESTION_BYID_FAIL =\r\n//     \"DELETE_QUESTION_BYID_FAIL\";\r\n","export const QUESTIONS_REQUEST = \"QUESTIONS_REQUEST\";\r\nexport const QUESTIONS_SUCCESS = \"QUESTIONS_SUCCESS\";\r\nexport const QUESTIONS_FAIL = \"QUESTIONS_FAIL\";\r\nexport const QUESTIONS_RESET = \"QUESTIONS_RESET\";\r\n\r\nexport const TEST_REQUEST = \"TEST_REQUEST\";\r\nexport const TEST_SUCCESS = \"TEST_SUCCESS\";\r\nexport const TEST_FAIL = \"TEST_FAIL\";\r\n\r\nexport const QUESTION_FAIL = \"QUESTION_FAIL\";\r\nexport const QUESTION_SUCCESS = \"QUESTION_SUCCESS\";\r\nexport const QUESTION_REQUEST = \"QUESTION_REQUEST\";\r\nexport const QUESTION_RESET = \"QUESTION_RESET\";\r\n\r\nexport const USER_GETALLQUESTIONS_REQUEST =\r\n    \"USER_GETALLQUESTIONS_REQUEST\";\r\nexport const USER_GETALLQUESTIONS_SUCCESS =\r\n    \"USER_GETALLQUESTIONS_SUCCESS\";\r\nexport const USER_GETALLQUESTIONS_FAIL =\r\n    \"USER_GETALLQUESTIONS_FAIL\";\r\n\r\nexport const GET_QUESTION_BYID_REQUEST =\r\n    \"GET_QUESTION_BYID_REQUEST\";\r\nexport const GET_QUESTION_BYID_SUCCESS =\r\n    \"GET_QUESTION_BYID_SUCCESS\";\r\nexport const GET_QUESTION_BYID_FAIL =\r\n    \"GET_QUESTION_BYID_FAIL\";\r\n\r\nexport const DELETE_QUESTION_BYID_REQUEST =\r\n    \"DELETE_QUESTION_BYID_REQUEST\";\r\nexport const DELETE_QUESTION_BYID_SUCCESS =\r\n    \"DELETE_QUESTION_BYID_SUCCESS\";\r\nexport const DELETE_QUESTION_BYID_FAIL =\r\n    \"DELETE_QUESTION_BYID_FAIL\";\r\n","import axios from \"axios\";\r\nimport {\r\n    QUESTION_REQUEST,\r\n    QUESTION_SUCCESS,\r\n    QUESTION_FAIL,\r\n} from \"../constants/questionConstant\";\r\n\r\n//ADMIN CONSTANTS\r\n\r\nimport {\r\n    GET_QUESTION_BYID_REQUEST,\r\n    GET_QUESTION_BYID_SUCCESS,\r\n    GET_QUESTION_BYID_FAIL,\r\n    QUESTIONS_FAIL,\r\n    QUESTIONS_SUCCESS,\r\n    QUESTIONS_REQUEST,\r\n    USER_GETALLQUESTIONS_REQUEST,\r\n    USER_GETALLQUESTIONS_SUCCESS,\r\n    USER_GETALLQUESTIONS_FAIL,\r\n} from \"../constants/questionConstants\";\r\n\r\n// import {\r\n//     DELETE_QUESTION_BYID_REQUEST,\r\n//     DELETE_QUESTION_BYID_SUCCESS,\r\n//     DELETE_QUESTION_BYID_FAIL,\r\n// } from \"../constants/questionConstants\";\r\n\r\nexport const getTestquestion =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: QUESTION_REQUEST });\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState();\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(\r\n                \"/api/v1/question/assigned\",\r\n                config\r\n            );\r\n            dispatch({\r\n                type: QUESTION_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: QUESTION_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\n// ADMIN  QUESTION\r\nexport const postQuestion =\r\n    (question, answers, correct_answers, section) =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch({ type: QUESTIONS_REQUEST });\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post(\r\n                \"/api/v1/question/\",\r\n                {\r\n                    question,\r\n                    answers,\r\n                    correct_answers,\r\n                    section,\r\n                },\r\n                config\r\n            );\r\n            dispatch({\r\n                type: QUESTIONS_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: QUESTIONS_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const getQuestion =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: QUESTIONS_REQUEST });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(\r\n                \"/api/v1/question\",\r\n                config\r\n            );\r\n            dispatch({\r\n                type: QUESTIONS_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: QUESTIONS_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const getAllQuestions =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: USER_GETALLQUESTIONS_REQUEST,\r\n            });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(\r\n                \"/api/v1/question/\",\r\n                config\r\n            );\r\n            dispatch({\r\n                type: USER_GETALLQUESTIONS_SUCCESS,\r\n                payload: data,\r\n            });\r\n            console.log(data);\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_GETALLQUESTIONS_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const getQuestionsId =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: GET_QUESTION_BYID_REQUEST });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(\r\n                `/api/v1/question/`,\r\n                config\r\n            );\r\n            dispatch({\r\n                type: GET_QUESTION_BYID_SUCCESS,\r\n                payload: data,\r\n            });\r\n            console.log(data);\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GET_QUESTION_BYID_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\n// export const deleteQuestionId =\r\n//     (id) => async (dispatch, getState) => {\r\n//         try {\r\n//             dispatch({\r\n//                 type: DELETE_QUESTION_BYID_REQUEST,\r\n//             });\r\n//             const {\r\n//                 adminLogin: { userInfo },\r\n//             } = getState();\r\n//             const config = {\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\",\r\n//                     \"Access-Control-Allow-Origin\": \"*\",\r\n//                     Authorization: `Bearer ${userInfo.token}`,\r\n//                 },\r\n//             };\r\n//             const { data } = await axios.delete(\r\n//                 `/api/v1/question${id}`,\r\n//                 config\r\n//             );\r\n//             dispatch({\r\n//                 type: DELETE_QUESTION_BYID_SUCCESS,\r\n//                 payload: data,\r\n//             });\r\n//         } catch (error) {\r\n//             dispatch({\r\n//                 type: DELETE_QUESTION_BYID_FAIL,\r\n//                 payload:\r\n//                     error.response &&\r\n//                     error.response.data.error\r\n//                         ? error.response.data.error\r\n//                         : error.message,\r\n//             });\r\n//         }\r\n//     };\r\n","export const RESPONSE_REQUEST = \"RESPONSE_REQUEST\";\r\nexport const RESPONSE_SUCCESS = \"RESPONSE_SUCCESS\";\r\nexport const RESPONSE_FAIL = \"RESPONSE_FAIL\";","export const TESTSCORE_REQUEST = \"TESTSCORE_REQUEST\";\r\nexport const TESTSCORE_SUCCESS = \"TESTSCORE_SUCCESS\";\r\nexport const TESTSCORE_FAIL = \"TESTSCORE_FAIL\";\r\n\r\nexport const TEST_TIME_REQUEST = \"TEST_TIME_REQUEST\";\r\nexport const TEST_TIME_SUCCESS = \"TEST_TIME_SUCCESS\";\r\nexport const TEST_TIME_FAIL = \"TEST_TIME_FAIL\";","import React, { useState, useEffect} from \"react\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport Slider from \"../../components/UI/Slider\";\r\nimport styles from \"./styles.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTestquestion } from \"../../redux/actions/questionAction\";\r\nimport {postResponse} from \"../../redux/actions/responseAction\";\r\nimport { Alert, AlertIcon, CircularProgress, Center } from \"@chakra-ui/react\";\r\nimport { getTestTime } from \"../../redux/actions/testscoreAction\";\r\n\r\n\r\nconst TestScreen = ({history}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n dispatch(getTestquestion());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTestTime());\r\n     }, [dispatch]);\r\n\r\n  const Response = useSelector((state) => state.Response);\r\n  const { loading, error, } = Response;\r\n\r\n  const getquestion = useSelector((state) =>state.getquestion);\r\n  const {questions}  = getquestion;\r\n\r\n  const getTime = useSelector((state) =>state.getTime);\r\n  const {testTime}  = getTime;\r\n\r\n  const mytime = testTime\r\n\r\n  console.log(mytime)\r\n\r\n \r\n  const [index, setIndex] = useState(0);\r\n  const [selected_answers, setSelected_answers] = useState(\"\");\r\n  const questionLength = questions && questions.length;\r\n  let initialMinute = (mytime)\r\n  let  initialSeconds = (mytime)\r\n  let [ minutes, setMinutes ] = useState(initialMinute);\r\n  let [seconds, setSeconds ] =  useState(initialSeconds);\r\n  \r\n\r\n  const question= questions && questions[index] && questions[index]\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  const lastpage = index + 1;\r\n  useEffect(()=>{\r\n  let myInterval = setInterval(() => {\r\n    if (seconds > 0) {\r\n        setSeconds(seconds - 1);\r\n    }\r\n    if (seconds === 0) {\r\n        if (minutes === 0) {\r\n            clearInterval(myInterval)\r\n        } else {\r\n            setMinutes(minutes - 1);\r\n            setSeconds(59);\r\n        }\r\n    } \r\n  }, 1000)\r\n  return ()=> {\r\n    clearInterval(myInterval);\r\n  };\r\n  });   \r\n\r\n  if (minutes === 0 && seconds === 10) {\r\n    alert(\"You have less than 1 minute\")\r\n    setTimeout(() => history.push(\"/success\"), [1000]); \r\n  } \r\n  \r\n\r\n    const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const newIndex = index + 1;\r\n    \r\n    if (selected_answers) {\r\n      localStorage.setItem(\"selected_answers\", '')\r\n        dispatch(\r\n          postResponse(question,selected_answers)\r\n          ); \r\n    }\r\n    if (!selected_answers) {\r\n      alert(\"Please select an option\");\r\n    } else {\r\n      if (newIndex >= questionLength)  {\r\n        history.push(\"/success\")\r\n      } else {\r\n        setIndex(newIndex);\r\n        setSelected_answers(\"\");\r\n        e.target.reset();\r\n      }\r\n    }\r\n  };\r\n\r\n  const prevHandler = () => {\r\n    setIndex(index - 1);\r\n  };\r\n\r\n  const size = (index / questionLength) * 100 || 0;\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      {error && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              {error}\r\n            </Alert>\r\n        )}\r\n        {loading ? (\r\n          <Center>\r\n            <CircularProgress isIndeterminate color=\"purple.300\" />\r\n          </Center>\r\n        ) : (  \r\n       <div className={`${styles.pagePadding}`}>\r\n        <div\r\n          className={`${styles.pagePadding} ${styles.border} ${styles.removePadding}`}\r\n        >\r\n      <div className={styles.left}>\r\n        { minutes === 0 && seconds === 0\r\n            ? null\r\n            : <h1 className={styles.timer}> {minutes} : {seconds < 10 ?  `0${seconds}` : seconds}</h1> \r\n        }\r\n        </div>\r\n      <div className={styles.section}>{questions && questions[index] && questions[index].section.title}</div>\r\n      <p2 className={styles.instruction}>{questions && questions[index] && questions[index].section.instruction}</p2>\r\n          <br />\r\n          <p2 className={styles.instruction}>{lastpage}  of  {questionLength}</p2>    \r\n          <Slider size={size} />\r\n          <div className={styles.question}>{questions &&  questions[index] && questions[index].question}</div>\r\n          <form onSubmit={submitHandler}>\r\n            {questions && questions[index] && questions[index].answers.map((item, i) => (\r\n              <div key={i}>\r\n                <div className=\"inputGroup\">\r\n                  <input\r\n                    id={`radio${i}`}\r\n                    name=\"radio\"\r\n                    type=\"radio\"\r\n                    value={item}\r\n                    onChange={(e) => setSelected_answers(e.target.value)}\r\n                  />\r\n                  <label htmlFor={`radio${i}`}>{item}</label>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {index > 0 && (\r\n              <button\r\n                type=\"button\"\r\n                className={`btn ${styles.purple} ${styles.marginTop}`}\r\n                onClick={prevHandler}\r\n              >\r\n                Back\r\n              </button>\r\n            )}\r\n            {lastpage === questionLength ? \r\n            <button type=\"submit\" className=\"btn gold\">\r\n              submit\r\n            </button>  :  <button type=\"submit\" className=\"btn gold\">\r\n              next\r\n            </button> }\r\n          </form>\r\n        </div>\r\n      </div> \r\n        )}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default TestScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  TESTSCORE_SUCCESS,\r\n  TESTSCORE_REQUEST,\r\n  TESTSCORE_FAIL,\r\n  TEST_TIME_SUCCESS,\r\n  TEST_TIME_REQUEST,\r\n  TEST_TIME_FAIL,\r\n} from \"../constants/testscoreConstants\";\r\n\r\nexport const getTestscore = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TESTSCORE_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/v1/test-score/self\", config);\r\n    dispatch({\r\n      type: TESTSCORE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TESTSCORE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTestTime = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TEST_TIME_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/v1/test/assigned\", config);\r\n    dispatch({\r\n      type: TEST_TIME_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TEST_TIME_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n    RESPONSE_FAIL,\r\n    RESPONSE_REQUEST,\r\n    RESPONSE_SUCCESS,\r\n    \r\n  } from \"../constants/responseConstant\";\r\nexport const postResponse =\r\n(question,selected_answers) =>\r\nasync (dispatch) => {\r\n  try {\r\n    dispatch({ type: RESPONSE_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/v1/candidate-response/\",\r\n      { question,selected_answers },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: RESPONSE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: RESPONSE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};","import React, { useEffect } from \"react\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport styles from \"./styles.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getTestscore } from \"../../redux/actions/testscoreAction\";\r\nimport { Alert, AlertIcon} from \"@chakra-ui/react\";\r\n\r\n\r\nconst SuccessScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const Myscore = useSelector((state) => state.Myscore);\r\n  const { testscore, error } = Myscore;\r\n  const score = testscore;\r\n  \r\n  useEffect(() => {\r\n    dispatch(getTestscore());\r\n  }, [dispatch]);\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <div className={styles.pagePadding}>\r\n      {error && (\r\n          <Alert status=\"error\">\r\n            <AlertIcon />\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        <div className={`${styles.center} ${styles.justifyCenter}`}>\r\n          <h1>You have completed your exam</h1>\r\n          <br/>\r\n          <h1 className={styles.scores}><h1>{score}%</h1></h1>\r\n          <img\r\n            src=\"https://img.freepik.com/free-vector/men-success-laptop-relieve-work-from-home-computer-great_10045-646.jpg?size=338&ext=jpg\"\r\n            alt=\"happy\"\r\n          />\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessScreen;\r\n","import React, { useState } from \"react\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport AccountHeader from \"../../components/UI/AccountHeader\";\r\nimport styles from \"./styles.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Alert, AlertIcon, CircularProgress, Center } from \"@chakra-ui/react\";\r\nimport { forgetpassword } from \"../../redux/actions/userActions\";\r\n\r\n\r\nconst Forget = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  \r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(forgetpassword(email));\r\n  };\r\n  const postforgetpassword = useSelector((state) => state.postforgetpassword);\r\n  const { loading, error, success } = postforgetpassword;\r\n\r\n  if (success) {\r\n    setTimeout(() => history.push(\"/login\"), [5000]);\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <div className={styles.pagePadding}>\r\n        <AccountHeader\r\n          instruction=\"Sign in to start your Test\"\r\n          title=\"Welcome to e-Interview\"\r\n        />\r\n        {error && (\r\n          <Alert status=\"error\">\r\n            <AlertIcon />\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {success && (\r\n            <Alert status=\"success\">\r\n              <AlertIcon />\r\n              Check your Email to Retrieve your password\r\n            </Alert>\r\n          )}\r\n        {loading ? (\r\n          <Center>\r\n            <CircularProgress isIndeterminate color=\"purple.300\" />\r\n          </Center>\r\n        ) : (\r\n          <div className={styles.form}>\r\n            <form onSubmit={submitHandler}>\r\n              <div className={styles.inputContainer}>\r\n                <input\r\n                  type=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                  placeholder=\"Email Address\"\r\n                />\r\n              </div>\r\n              <div className={styles.inputContainer}>\r\n                <input type=\"submit\" value=\"Send\" className=\"btn gold\" />\r\n              </div>\r\n              <div className={styles.inputContainer}>\r\n                <p className={styles.center}>\r\n                  Remember your password? <Link to=\"/login\">Sign In</Link>\r\n                </p>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forget;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport AccountHeader from \"../../components/UI/AccountHeader\";\r\nimport styles from \"./styles.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Alert, AlertIcon, CircularProgress, Center } from \"@chakra-ui/react\";\r\nimport { changePassword } from \"../../redux/actions/userActions\";\r\n\r\n\r\nconst ChangePassword = ({ history }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [msg, setMsg] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password === confirmPassword) {\r\n      dispatch(\r\n        changePassword(password)\r\n      );\r\n    } else {\r\n      setMsg(true);\r\n    }\r\n  };\r\n  const changepassword = useSelector((state) => state.changepassword);\r\n  const { loading, error, userInfo } = changepassword;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/start\");\r\n    }\r\n  }, [userInfo, history, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <div className={styles.pagePadding}>\r\n        <AccountHeader\r\n          instruction=\"Sign in to start your Test\"\r\n          title=\"Welcome to e-Interview\"\r\n        />\r\n        {error && (\r\n          <Alert status=\"error\">\r\n            <AlertIcon />\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        {msg && (\r\n            <div className={styles.inputContainer}>\r\n              <Alert status=\"error\">\r\n                <AlertIcon />\r\n                Password does not match\r\n              </Alert>\r\n            </div>\r\n          )}\r\n        {loading ? (\r\n          <Center>\r\n            <CircularProgress isIndeterminate color=\"purple.300\" />\r\n          </Center>\r\n        ) : (\r\n          <div className={styles.form}>\r\n            <form onSubmit={submitHandler}>\r\n              <div className={styles.inputContainer}>\r\n                <input\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  value={password}\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n              <div className={styles.inputContainer}>\r\n                  <input\r\n                    type=\"password\"\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    value={confirmPassword}\r\n                    placeholder=\"Confirm Password\"\r\n                  />\r\n                </div>\r\n              <div className={styles.inputContainer}>\r\n                <input type=\"submit\" value=\"Login\" className=\"btn gold\" />\r\n              </div>\r\n              <div className={styles.inputContainer}>\r\n                <p className={styles.center}>\r\n                  Don't Have an account? <Link to=\"/signup\">Sign Up</Link>  <span className={styles.inputContainer}><Link to=\"/forget\">Forget password?</Link></span>\r\n                </p>\r\n              </div>\r\n              \r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","export default __webpack_public_path__ + \"static/media/user1.14afd807.jpg\";","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport userAdmin from \"../../assets/user1.jpg\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar({ title, name }) {\r\n    const adminDetails = useSelector(\r\n        (state) => state.adminDetails\r\n    );\r\n    const { user } = adminDetails;\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <h5>{title}</h5>\r\n            <div className=\"navbar_img\">\r\n                <img src={userAdmin} alt=\"user\" />\r\n            </div>\r\n            <div className=\"navbar_username\">\r\n                {user && user ? (\r\n                    <>\r\n                        <h4>{name}</h4>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Link to=\"#\"></Link>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { MdSpaceDashboard } from \"react-icons/md\";\r\nimport { MdPerson } from \"react-icons/md\";\r\nimport { FaFolderPlus, FaPiggyBank } from \"react-icons/fa\";\r\nimport { MdAdminPanelSettings } from \"react-icons/md\";\r\nimport { MdOutlineLogout } from \"react-icons/md\";\r\nimport \"./Sidebar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { adminLogout } from \"../../redux/actions/userActions\";\r\n\r\nfunction Sidebar() {\r\n    const dispatch = useDispatch();\r\n    const logoutHandler = () => {\r\n        dispatch(adminLogout());\r\n    };\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_container\">\r\n                <h4 className=\"sidebar_title\">\r\n                    <Link to=\"/\">\r\n                        <strong>E-INTERVIEW</strong>\r\n                    </Link>\r\n                </h4>\r\n\r\n                <div className=\"sidebar_icons\">\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/dashboard\">\r\n                                <MdSpaceDashboard />\r\n                                <p>Dashboard</p>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/profile\">\r\n                                <MdPerson />\r\n                                <p>Candidates</p>\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <Link to=\"/adminTest\">\r\n                                <FaFolderPlus />\r\n                                <p>Add Test</p>\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <Link to=\"/questionbank\">\r\n                                <FaPiggyBank />\r\n                                <p>Question Bank</p>\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <Link to=\"/adminregister\">\r\n                                <MdAdminPanelSettings />\r\n                                <p>Admin</p>\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link\r\n                                to=\"/adminlogin\"\r\n                                onClick={logoutHandler}\r\n                            >\r\n                                <MdOutlineLogout />\r\n                                <p>Logout</p>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","export default __webpack_public_path__ + \"static/media/user12.656053a4.png\";","import React from \"react\";\r\nimport \"./Infobox.css\";\r\n\r\nfunction Infobox({ title, count, Icon, color }) {\r\n    return (\r\n        <div className=\"infobox\">\r\n            <div className=\"grid\">\r\n                <div className=\"card\">\r\n                    <p>{title}</p>\r\n                    <h1>{count}</h1>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <Icon style={{ color: color }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Infobox;\r\n","export default __webpack_public_path__ + \"static/media/icon.55566f86.jpg\";","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport user1 from \"../../assets/user1.jpg\";\r\nimport icon from \"../../assets/icon.jpg\";\r\nimport \"./Widget.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    getAllCandidatesdetails,\r\n    myDetails,\r\n} from \"../../redux/actions/userActions\";\r\n\r\nfunction Widgetfeed() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(myDetails());\r\n    }, [dispatch]);\r\n\r\n    const adminDetails = useSelector(\r\n        (state) => state.adminDetails\r\n    );\r\n    const { user } = adminDetails;\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCandidatesdetails());\r\n    }, [dispatch]);\r\n\r\n    const getCandidate = useSelector(\r\n        (state) => state.getCandidate\r\n    );\r\n    const { candidates } = getCandidate;\r\n\r\n    return (\r\n        <div className=\"widget\">\r\n            <div className=\"widget_container\">\r\n                <div className=\"widget_img\">\r\n                    <img src={user1} alt=\"\" />\r\n                    {`${user && user.firstName}`}\r\n                    <Link to=\"/adminlogin\">\r\n                        <div className=\"widgetadmin\">\r\n                            <button className=\"widget_btn\">\r\n                                Admin\r\n                            </button>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"widget_post\">\r\n                    <div className=\"widget_title\">\r\n                        <h4>Most Recent Test</h4>\r\n                    </div>\r\n\r\n                    {candidates &&\r\n                        candidates.map((item) => (\r\n                            <div className=\"post_card\">\r\n                                <div className=\"user1_img\">\r\n                                    <img\r\n                                        src={icon}\r\n                                        alt=\"\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"user1_id\">\r\n                                    <h4>\r\n                                        {\r\n                                            item.candidate\r\n                                                .firstName\r\n                                        }\r\n                                    </h4>\r\n                                    <h6>\r\n                                        {item.test.title}\r\n                                    </h6>\r\n                                </div>\r\n                                <div className=\"user1_score\">\r\n                                    {item.score}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Widgetfeed;\r\n","export const GET_TOTALCANDIDATES_REQUEST =\r\n    \"GET_TOTALCANDIDATES_REQUEST\";\r\nexport const GET_TOTALCANDIDATES_SUCCESS =\r\n    \"GET_TOTALCANDIDATES_SUCCESS\";\r\nexport const GET_TOTALCANDIDATES_FAIL =\r\n    \"GET_TOTALCANDIDATES_FAIL\";\r\n\r\nexport const GET_CANDIDATESPASSED_REQUEST =\r\n    \"GET_TOTALCANDIDATESPASSED_REQUEST\";\r\nexport const GET_CANDIDATESPASSED_SUCCESS =\r\n    \"GET_TOTALCANDIDATESPASSED_SUCCESS\";\r\nexport const GET_CANDIDATESPASSED_FAIL =\r\n    \"GET_TOTALCANDIDATESPASSED_FAIL\";\r\n\r\nexport const GET_CANDIDATESFAILED_REQUEST =\r\n    \"GET_CANDIDATESFAILED_REQUEST\";\r\nexport const GET_CANDIDATESFAILED_SUCCESS =\r\n    \"GET_CANDIDATESFAILED_SUCCESS\";\r\nexport const GET_CANDIDATESFAILED_FAIL =\r\n    \"GET_CANDIDATESFAILED_FAIL\";\r\n","import React, { useEffect } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport user12 from \"../assets/user12.png\";\r\nimport Infobox from \"../components/Userfeed/Infobox\";\r\nimport Widgetfeed from \"../components/Widgetfeed\";\r\nimport { AiOutlineBars } from \"react-icons/ai\";\r\nimport { FaUserGraduate } from \"react-icons/fa\";\r\nimport { RiAdminFill } from \"react-icons/ri\";\r\nimport { BsCheckCircleFill } from \"react-icons/bs\";\r\nimport { MdCancel } from \"react-icons/md\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { myAdminDetails } from \"../redux/actions/userActions\";\r\nimport { getAllAdmin } from \"../redux/actions/userActions\";\r\nimport { getQuestionsId } from \"../redux/actions/questionAction\";\r\nimport {\r\n    getCandidatesFail,\r\n    getCandidatesPass,\r\n    getTotalCandidates,\r\n} from \"../redux/actions/candidateAction\";\r\n\r\nconst Dashboard = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(myAdminDetails());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getQuestionsId());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllAdmin());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTotalCandidates());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCandidatesPass());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCandidatesFail());\r\n    }, [dispatch]);\r\n\r\n    const adminDetails = useSelector(\r\n        (state) => state.adminDetails\r\n    );\r\n    const { user } = adminDetails;\r\n\r\n    const getQuestion = useSelector(\r\n        (state) => state.getQuestion\r\n    );\r\n    const { questions } = getQuestion;\r\n\r\n    const myAllAdmin = useSelector(\r\n        (state) => state.myAllAdmin\r\n    );\r\n    const { admin } = myAllAdmin;\r\n\r\n    const totalCandidates = useSelector(\r\n        (state) => state.totalCandidates\r\n    );\r\n    const { candidate } = totalCandidates;\r\n\r\n    const allCandidatePassed = useSelector(\r\n        (state) => state.allCandidatePassed\r\n    );\r\n    const { candidatepass } = allCandidatePassed;\r\n\r\n    const allCandidateFailed = useSelector(\r\n        (state) => state.allCandidateFailed\r\n    );\r\n    const { candidatefail } = allCandidateFailed;\r\n\r\n    return (\r\n        <>\r\n            <Sidebar />\r\n            <Navbar\r\n                title=\"Dashboard\"\r\n                name={`Hello ${user && user.firstName}`}\r\n            />\r\n\r\n            <div className=\"container\">\r\n                <div className=\"feed\">\r\n                    <div className=\"feed_user\">\r\n                        <h2 className=\"feed_title\">\r\n                            {`Hello ${\r\n                                user && user.firstName\r\n                            }`}\r\n                            👍👍🥇\r\n                        </h2>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <span className=\"feed_subtitle\">\r\n                            <p>Good to see you again!</p>\r\n                        </span>\r\n                        <Link to=\"/questionbank\">\r\n                            <div className=\"feed_btn\">\r\n                                <button className=\"btn\">\r\n                                    Get Started\r\n                                </button>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"feed_img\">\r\n                        <img\r\n                            src={user12}\r\n                            alt=\"User Detail\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"cardGrid\">\r\n                    <Infobox\r\n                        title=\"Questions\"\r\n                        count={\r\n                            questions && questions.length\r\n                        }\r\n                        Icon={AiOutlineBars}\r\n                        color=\"Green\"\r\n                    />\r\n\r\n                    <Infobox\r\n                        title=\"Admin\"\r\n                        count={admin && admin.length}\r\n                        Icon={RiAdminFill}\r\n                        color=\"#7070db\"\r\n                    />\r\n                    <Infobox\r\n                        title=\"Total Candidates\"\r\n                        count={\r\n                            candidate && candidate.length\r\n                        }\r\n                        Icon={FaUserGraduate}\r\n                        color=\"cyan\"\r\n                    />\r\n                    <Infobox\r\n                        title=\"Candidates that Passed\"\r\n                        count={\r\n                            candidatepass &&\r\n                            candidatepass.length\r\n                        }\r\n                        Icon={BsCheckCircleFill}\r\n                        color=\"#40ff00\"\r\n                    />\r\n                    <Infobox\r\n                        title=\"Candidates that Failed\"\r\n                        count={\r\n                            candidatefail &&\r\n                            candidatefail.length\r\n                        }\r\n                        Icon={MdCancel}\r\n                        color=\"#d92626\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <Widgetfeed />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import axios from \"axios\";\r\nimport {\r\n    GET_TOTALCANDIDATES_REQUEST,\r\n    GET_TOTALCANDIDATES_SUCCESS,\r\n    GET_TOTALCANDIDATES_FAIL,\r\n    GET_CANDIDATESPASSED_FAIL,\r\n    GET_CANDIDATESPASSED_REQUEST,\r\n    GET_CANDIDATESPASSED_SUCCESS,\r\n    GET_CANDIDATESFAILED_FAIL,\r\n    GET_CANDIDATESFAILED_SUCCESS,\r\n    GET_CANDIDATESFAILED_REQUEST,\r\n} from \"../constants/candidateConstants\";\r\n\r\nexport const getTotalCandidates =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: GET_TOTALCANDIDATES_REQUEST,\r\n            });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(\r\n                \"/api/v1/candidate/\",\r\n                config\r\n            );\r\n            dispatch({\r\n                type: GET_TOTALCANDIDATES_SUCCESS,\r\n                payload: data,\r\n            });\r\n            console.log(data);\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GET_TOTALCANDIDATES_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const getCandidatesPass =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: GET_CANDIDATESPASSED_REQUEST,\r\n            });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(\r\n                \"/api/v1/candidate/passed\",\r\n                config\r\n            );\r\n            dispatch({\r\n                type: GET_CANDIDATESPASSED_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GET_CANDIDATESPASSED_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const getCandidatesFail =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: GET_CANDIDATESFAILED_REQUEST,\r\n            });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(\r\n                \"/api/v1/candidate/failed\",\r\n                config\r\n            );\r\n            dispatch({\r\n                type: GET_CANDIDATESFAILED_SUCCESS,\r\n                payload: data,\r\n            });\r\n            console.log(data);\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GET_CANDIDATESFAILED_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n","import React, { useState } from \"react\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { registerAdmin } from \"../redux/actions/userActions\";\r\nimport {\r\n    Alert,\r\n    AlertIcon,\r\n    Center,\r\n    CircularProgress,\r\n    useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { USERS_REGISTRATION_RESET } from \"../redux/constants/userConstants\";\r\n\r\nconst AdminRegister = ({ history }) => {\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] =\r\n        useState(\"\");\r\n    const [msg, setMsg] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            alert(\r\n                \"Oops Password and Confirm Password don't match \"\r\n            );\r\n        } else {\r\n            dispatch(\r\n                registerAdmin(\r\n                    firstName,\r\n                    lastName,\r\n                    phone,\r\n                    email,\r\n                    password\r\n                )\r\n            );\r\n            setMsg(true);\r\n        }\r\n    };\r\n\r\n    const adminRegister = useSelector(\r\n        (state) => state.adminRegister\r\n    );\r\n    const { loading, error, success } = adminRegister;\r\n\r\n    const toast = useToast();\r\n\r\n    if (success) {\r\n        toast({\r\n            title: \"Notification\",\r\n            description:\r\n                \"Resigtration created Successfully\",\r\n            status: \"success\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n        });\r\n        setTimeout(\r\n            () => history.push(\"/adminlogin\"),\r\n            [3000]\r\n        );\r\n        dispatch({ type: USERS_REGISTRATION_RESET });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Sidebar />\r\n            <div className=\"admin_container\">\r\n                <Navbar title=\"Admin\" />\r\n\r\n                <div className=\"admin\">\r\n                    <div className=\"admin_btn\">\r\n                        <Link to=\"/viewadmin\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn\"\r\n                            >\r\n                                View Admin\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    {error && (\r\n                        <Alert status=\"error\">\r\n                            <AlertIcon />\r\n                            {error}\r\n                        </Alert>\r\n                    )}\r\n\r\n                    {success && (\r\n                        <Alert status=\"success\">\r\n                            <AlertIcon />\r\n                        </Alert>\r\n                    )}\r\n\r\n                    {loading ? (\r\n                        <Center>\r\n                            <CircularProgress\r\n                                isIndeterminate\r\n                                color=\"purple.300\"\r\n                            />\r\n                        </Center>\r\n                    ) : (\r\n                        <form onSubmit={submitHandler}>\r\n                            <div className=\"admin_form\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    onChange={(e) =>\r\n                                        setFirstName(\r\n                                            e.target.value\r\n                                        )\r\n                                    }\r\n                                    value={firstName}\r\n                                    placeholder=\"First Name\"\r\n                                />\r\n\r\n                                <input\r\n                                    type=\"text\"\r\n                                    onChange={(e) =>\r\n                                        setLastName(\r\n                                            e.target.value\r\n                                        )\r\n                                    }\r\n                                    value={lastName}\r\n                                    placeholder=\"Last Name\"\r\n                                />\r\n\r\n                                <input\r\n                                    type=\"email\"\r\n                                    onChange={(e) =>\r\n                                        setEmail(\r\n                                            e.target.value\r\n                                        )\r\n                                    }\r\n                                    value={email}\r\n                                    placeholder=\"Email Address\"\r\n                                />\r\n\r\n                                <input\r\n                                    type=\"phone\"\r\n                                    onChange={(e) =>\r\n                                        setPhone(\r\n                                            e.target.value\r\n                                        )\r\n                                    }\r\n                                    value={phone}\r\n                                    placeholder=\"Phone Number\"\r\n                                />\r\n\r\n                                <input\r\n                                    type=\"password\"\r\n                                    onChange={(e) =>\r\n                                        setPassword(\r\n                                            e.target.value\r\n                                        )\r\n                                    }\r\n                                    value={password}\r\n                                    placeholder=\"Password\"\r\n                                />\r\n\r\n                                <input\r\n                                    type=\"password\"\r\n                                    onChange={(e) =>\r\n                                        setConfirmPassword(\r\n                                            e.target.value\r\n                                        )\r\n                                    }\r\n                                    value={confirmPassword}\r\n                                    placeholder=\"Confirm Password\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"admin_btn\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn\"\r\n                                >\r\n                                    Add Admin\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminRegister;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { myDetails } from \"../../redux/actions/userActions\";\r\nimport { getQuestionsId } from \"../../redux/actions/questionAction\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport \"./QuestionTab.css\";\r\nconst QuestionTable = () => {\r\n    const [questions] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const deletequestion = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const adminDetails = useSelector(\r\n        (state) => state.adminDetails\r\n    );\r\n    const { user } = adminDetails;\r\n\r\n    const getQuestion = useSelector(\r\n        (state) => state.getQuestion\r\n    );\r\n    const { questions: question } = getQuestion;\r\n\r\n    const handledelete = (_id) => {\r\n        const index = question.indexOf(_id);\r\n        if (index > -1) {\r\n            question.splice(index, 1);\r\n        }\r\n        console.log(question.splice(_id));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getQuestionsId());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(myDetails());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"question\">\r\n            <Navbar\r\n                title=\"Questions\"\r\n                name={`${user && user.firstName}`}\r\n            />\r\n            <div className=\"goBack_btn\">\r\n                <Link to=\"/questionbank\">\r\n                    <button type=\"submit\" className=\"btn\">\r\n                        Go Back\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"question_table\">\r\n                <table>\r\n                    <tr>\r\n                        <th>Question</th>\r\n                        <th>Section</th>\r\n                        <th>Instructions</th>\r\n                        <th>Timer (Mins)</th>\r\n                    </tr>\r\n                    {question &&\r\n                        question.map((item) => (\r\n                            <tbody>\r\n                                <tr key={item._id}>\r\n                                    <td>{item.question}</td>\r\n                                    <td>\r\n                                        {item.section.title}\r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            item.section\r\n                                                .instruction\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.section.timer}\r\n                                    </td>\r\n                                    <td>\r\n                                        <button\r\n                                            className=\"table_btn\"\r\n                                            onClick={() =>\r\n                                                handledelete(\r\n                                                    item._id\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        ))}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionTable;\r\n","import React from \"react\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport \"./ViewQuestionn.css\";\r\nimport QuestionTable from \"../components/QuestionTable\";\r\n\r\nconst ViewQuestion = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"sidebar_view\">\r\n                <Sidebar />\r\n            </div>\r\n            <div className=\"viewQuestion_container\">\r\n                <div className=\"question\">\r\n                    <QuestionTable />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewQuestion;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport {\r\n    getAllCandidatesdetails,\r\n    myDetails,\r\n} from \"../redux/actions/userActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nfunction Profile() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCandidatesdetails());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(myDetails());\r\n    }, [dispatch]);\r\n\r\n    const adminDetails = useSelector(\r\n        (state) => state.adminDetails\r\n    );\r\n    const { user } = adminDetails;\r\n\r\n    const getCandidate = useSelector(\r\n        (state) => state.getCandidate\r\n    );\r\n    const { candidates } = getCandidate;\r\n\r\n    const arr = candidates.map((item) => {\r\n        return (\r\n            <tbody>\r\n                <tr key={item._id}>\r\n                    <td>{item.candidate.firstName}</td>\r\n                    <td>{item.test.title}</td>\r\n                    <td>{item.score}</td>\r\n                </tr>\r\n            </tbody>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"view_question\">\r\n                <div className=\"sidebar_view\">\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"admin_container\">\r\n                    <div className=\"question\">\r\n                        <Navbar\r\n                            title=\"Candidate Profile\"\r\n                            name={`${\r\n                                user && user.firstName\r\n                            }`}\r\n                        />\r\n                        <div className=\"goBack_btn\">\r\n                            <Link to=\"/dashboard\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn\"\r\n                                >\r\n                                    Go Back\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"question_table\">\r\n                            <table>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Test</th>\r\n                                    <th>Score</th>\r\n                                </tr>\r\n                                {arr}\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import axios from \"axios\";\r\nimport {\r\n    CREATE_TEST_FAIL,\r\n    CREATE_TEST_SUCCESS,\r\n    CREATE_TEST_REQUEST,\r\n    GET_TEST_FAIL,\r\n    GET_TEST_SUCCESS,\r\n    GET_TEST_REQUEST,\r\n} from \"../constants/testConstants\";\r\n\r\nexport const createTest =\r\n    (title) => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: CREATE_TEST_REQUEST });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.post(\r\n                \"/api/v1/test/\",\r\n                { title },\r\n                config\r\n            );\r\n            dispatch({\r\n                type: CREATE_TEST_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: CREATE_TEST_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const getTest = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: GET_TEST_REQUEST });\r\n        const {\r\n            adminLogin: { userInfo },\r\n        } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n        const { data } = await axios.get(\r\n            \"/api/v1/test\",\r\n            config\r\n        );\r\n        dispatch({\r\n            type: GET_TEST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_TEST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.error\r\n                    ? error.response.data.error\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","export const CREATE_SECTION_REQUEST = 'CREATE_SECTION_REQUEST'\r\nexport const CREATE_SECTION_SUCCESS = 'CREATE_SECTION_SUCCESS'\r\nexport const CREATE_SECTION_FAIL = 'CREATE_SECTION_FAIL'\r\nexport const CREATE_SECTION_RESET = 'CREATE_SECTION_RESET'\r\n\r\nexport const GET_SECTION_REQUEST = 'GET_SECTION_REQUEST'\r\nexport const GET_SECTION_SUCCESS = 'GET_SECTION_SUCCESS'\r\nexport const GET_SECTION_FAIL = 'GET_SECTION_FAIL'\r\n\r\nexport const DELETE_SECTION_REQUEST = 'DELETE_SECTION_REQUEST'\r\nexport const DELETE_SECTION_SUCCESS = 'DELETE_SECTION_SUCCESS'\r\nexport const DELETE_SECTION_FAIL = 'DELETE_SECTION_FAIL'\r\nexport const DELETE_SECTION_RESET = 'DELETE_SECTION_RESET'\r\n\r\n\r\nexport const GET_SECTION_BYID_REQUEST = 'GET_SECTION_BYID_REQUEST'\r\nexport const GET_SECTION_BYID_SUCCESS = 'GET_SECTION_BYID_SUCCESS'\r\nexport const GET_SECTION_BYID_FAIL = 'GET_SECTION_BYID_FAIL'","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport \"./QuestionBank.css\";\r\nimport { myDetails } from \"../redux/actions/userActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postQuestion } from \"../redux/actions/questionAction\";\r\nimport { getTest } from \"../redux/actions/testActions\";\r\nimport { getExamSection } from \"../redux/actions/sectionActions\";\r\nimport {\r\n    Alert,\r\n    AlertIcon,\r\n    Center,\r\n    CircularProgress,\r\n    useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { QUESTIONS_RESET } from \"../redux/constants/questionConstants\";\r\n\r\nfunction QuestionBank() {\r\n    const dispatch = useDispatch();\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [answers, setAnswers] = useState([]);\r\n    const [correct_answers, setCorrectAnswer] = useState(\r\n        []\r\n    );\r\n    const [section, setSection] = useState(\"\");\r\n    const [option, setOption] = useState(\"\");\r\n\r\n    const addOption = () => {\r\n        setAnswers([...answers, option]);\r\n    };\r\n\r\n    const removeOption = (i) => {\r\n        const index = answers.indexOf(i);\r\n        if (index > -1) {\r\n            answers.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setQuestion(e.target.value);\r\n    };\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            postQuestion(\r\n                question,\r\n                answers,\r\n                correct_answers,\r\n                section\r\n            )\r\n        );\r\n    };\r\n    const adminQuestions = useSelector(\r\n        (state) => state.adminQuestions\r\n    );\r\n    const { questions, success, error, loading } =\r\n        adminQuestions;\r\n\r\n    const allTest = useSelector((state) => state.allTest);\r\n    const { test: tests } = allTest;\r\n\r\n    const examSection = useSelector(\r\n        (state) => state.examSection\r\n    );\r\n    const { sections } = examSection;\r\n\r\n    const adminDetails = useSelector(\r\n        (state) => state.adminDetails\r\n    );\r\n    const { user } = adminDetails;\r\n\r\n    useEffect(() => {\r\n        dispatch(getTest());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(myDetails());\r\n    }, [dispatch]);\r\n\r\n    const getOptions = (event) => {\r\n        const id = event.target.value;\r\n        dispatch(getExamSection(id));\r\n    };\r\n\r\n    const toast = useToast();\r\n\r\n    if (success) {\r\n        toast({\r\n            title: \"Notification\",\r\n            description: \"Question created Successfully\",\r\n            status: \"success\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n        });\r\n        dispatch({ type: QUESTIONS_RESET });\r\n    }\r\n\r\n    return (\r\n        <div className=\"questionbank\">\r\n            <div>\r\n                <Sidebar />\r\n            </div>\r\n            <div className=\"question_container\">\r\n                {error && (\r\n                    <Alert status=\"error\">\r\n                        <AlertIcon />\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n                {success && (\r\n                    <Alert status=\"success\">\r\n                        <AlertIcon />\r\n                        Question Submitted Successfully\r\n                    </Alert>\r\n                )}\r\n\r\n                {loading ? (\r\n                    <Center>\r\n                        <CircularProgress\r\n                            isIndeterminate\r\n                            color=\"purple.300\"\r\n                        />\r\n                    </Center>\r\n                ) : (\r\n                    <form onSubmit={submitHandler}>\r\n                        <Navbar\r\n                            title=\"Question Bank\"\r\n                            name={` ${\r\n                                user && user.firstName\r\n                            }`}\r\n                        />\r\n                        <div\r\n                            type=\"submit\"\r\n                            className=\"questionbank_btn\"\r\n                        >\r\n                            <Link to=\"/viewquestion\">\r\n                                <button className=\"btn\">\r\n                                    View All Question{\" \"}\r\n                                </button>{\" \"}\r\n                            </Link>{\" \"}\r\n                        </div>\r\n                        <div className=\"question_section\">\r\n                            <div className=\"sections\">\r\n                                <div className=\"section_dropdown\">\r\n                                    <label>Test Name</label>\r\n                                    <select\r\n                                        onChange={\r\n                                            getOptions\r\n                                        }\r\n                                    >\r\n                                        <option>\r\n                                            Select Test\r\n                                        </option>\r\n                                        {tests &&\r\n                                            tests.map(\r\n                                                (\r\n                                                    item,\r\n                                                    i\r\n                                                ) => (\r\n                                                    <option\r\n                                                        key={\r\n                                                            i\r\n                                                        }\r\n                                                        value={\r\n                                                            item._id\r\n                                                        }\r\n                                                    >\r\n                                                        {\r\n                                                            item.title\r\n                                                        }\r\n                                                    </option>\r\n                                                )\r\n                                            )}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"exam_dropdown\">\r\n                                    <label>\r\n                                        Test Section\r\n                                    </label>\r\n                                    <select\r\n                                        onChange={(e) =>\r\n                                            setSection(\r\n                                                e.target\r\n                                                    .value\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <option>\r\n                                            Select Section\r\n                                        </option>\r\n                                        {sections &&\r\n                                            sections.map(\r\n                                                (\r\n                                                    item,\r\n                                                    i\r\n                                                ) => (\r\n                                                    <option\r\n                                                        key={\r\n                                                            i\r\n                                                        }\r\n                                                        value={\r\n                                                            item._id\r\n                                                        }\r\n                                                    >\r\n                                                        {\r\n                                                            item.title\r\n                                                        }\r\n                                                    </option>\r\n                                                )\r\n                                            )}\r\n                                    </select>{\" \"}\r\n                                </div>{\" \"}\r\n                            </div>\r\n                            <div className=\"questionbank_space\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    onChange={handleChange}\r\n                                    value={question}\r\n                                    placeholder=\"Question\"\r\n                                    name=\"text\"\r\n                                    className=\"question_space\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"option_space\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        setOption(\r\n                                            e.target.value\r\n                                        );\r\n                                    }}\r\n                                    value={option}\r\n                                    placeholder=\"Answers\"\r\n                                    className=\"option\"\r\n                                />\r\n                                <button\r\n                                    className=\"btn\"\r\n                                    onClick={addOption}\r\n                                    type=\"button\"\r\n                                >\r\n                                    Add Option{\" \"}\r\n                                </button>{\" \"}\r\n                            </div>{\" \"}\r\n                        </div>\r\n                        {answers.map((item, i) => (\r\n                            <div\r\n                                className=\"remove_option2\"\r\n                                key={i}\r\n                            >\r\n                                {item}\r\n                                <button\r\n                                    onClick={() =>\r\n                                        removeOption(item)\r\n                                    }\r\n                                    className=\"remove_btn2\"\r\n                                >\r\n                                    Remove Option{\" \"}\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                        <div className=\"correct_answer\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Correct answer\"\r\n                                vaule={correct_answers}\r\n                                onChange={(e) => {\r\n                                    setCorrectAnswer(\r\n                                        e.target.value\r\n                                    );\r\n                                }}\r\n                                className=\"correct\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"add_question\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn\"\r\n                            >\r\n                                Add Question{\" \"}\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionBank;\r\n","import axios from \"axios\";\r\nimport {\r\n    CREATE_SECTION_FAIL,\r\n    CREATE_SECTION_SUCCESS,\r\n    CREATE_SECTION_REQUEST,\r\n    GET_SECTION_FAIL,\r\n    GET_SECTION_SUCCESS,\r\n    GET_SECTION_REQUEST,\r\n    GET_SECTION_BYID_SUCCESS,\r\n    GET_SECTION_BYID_REQUEST,\r\n    GET_SECTION_BYID_FAIL,\r\n} from \"../constants/sectionConstants\";\r\n\r\nexport const createSection =\r\n    (title, timer, instruction, test) =>\r\n    async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: CREATE_SECTION_REQUEST });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.post(\r\n                \"/api/v1/section/\",\r\n                { title, timer, instruction, test },\r\n                config\r\n            );\r\n            dispatch({\r\n                type: CREATE_SECTION_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: CREATE_SECTION_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const getSection =\r\n    () => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: GET_SECTION_REQUEST });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(\r\n                \"/api/v1/section\",\r\n                config\r\n            );\r\n            dispatch({\r\n                type: GET_SECTION_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GET_SECTION_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const getExamSection =\r\n    (id) => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: GET_SECTION_BYID_REQUEST });\r\n            const {\r\n                adminLogin: { userInfo },\r\n            } = getState();\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(\r\n                `/api/v1/section/test/${id}`,\r\n                config\r\n            );\r\n            dispatch({\r\n                type: GET_SECTION_BYID_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GET_SECTION_BYID_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <div className=\"nav\">\r\n                <Link to=\"/\">\r\n                    <div className=\"header\">\r\n                        E-INTERVIEW\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport image from \"../assets/img-login.svg\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./AdminLogin.css\";\r\nimport { loginAdmin } from \"../redux/actions/userActions\";\r\nimport {\r\n    Alert,\r\n    AlertIcon,\r\n    Center,\r\n    CircularProgress,\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction AdminLogin({ history }) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const sumbitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginAdmin(email, password));\r\n    };\r\n\r\n    const adminLogin = useSelector(\r\n        (state) => state.adminLogin\r\n    );\r\n    const { loading, error, success, userInfo } =\r\n        adminLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(\"/dashboard\");\r\n        }\r\n    }, [userInfo, history]);\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {error && (\r\n                <Alert status=\"error\">\r\n                    <AlertIcon />\r\n                    {error}\r\n                </Alert>\r\n            )}\r\n\r\n            {success && (\r\n                <Alert status=\"success\">\r\n                    <AlertIcon />\r\n                </Alert>\r\n            )}\r\n\r\n            {loading ? (\r\n                <Center>\r\n                    <CircularProgress\r\n                        isIndeterminate\r\n                        color=\"purple.300\"\r\n                    />\r\n                </Center>\r\n            ) : (\r\n                <div className=\"login-page\">\r\n                    <form\r\n                        onSubmit={sumbitHandler}\r\n                        className=\"login\"\r\n                    >\r\n                        <div className=\"image-container\">\r\n                            <img src={image} alt=\"admin\" />\r\n                        </div>\r\n                        <h2>Welcome to e-Interview!</h2>\r\n                        <h3>Admin Portal</h3>\r\n                        <div className=\"login-form-inputs\">\r\n                            <input\r\n                                type=\"email\"\r\n                                onChange={(e) => {\r\n                                    setEmail(\r\n                                        e.target.value\r\n                                    );\r\n                                }}\r\n                                value={email}\r\n                                placeholder=\"Email Address\"\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => {\r\n                                    setPassword(\r\n                                        e.target.value\r\n                                    );\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <Link to=\"/passwordforgot\">\r\n                            <div className=\"forgot-password\">\r\n                                Forgot password?\r\n                            </div>\r\n                        </Link>\r\n                        <button\r\n                            type=\"submit\"\r\n                            value=\"Login\"\r\n                            className=\"submit-btn\"\r\n                        >\r\n                            Login\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminLogin;\r\n","export default __webpack_public_path__ + \"static/media/jobexam.c31cb744.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport jobexam from \"../assets/jobexam.jpg\";\r\nimport \"./Test.css\";\r\nimport { createTest } from \"../redux/actions/testActions\";\r\nimport {\r\n    useToast,\r\n    CircularProgress,\r\n    Alert,\r\n    AlertIcon,\r\n} from \"@chakra-ui/react\";\r\nimport { CREATE_TEST_RESET } from \"../redux/constants/testConstants\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { myDetails } from \"../redux/actions/userActions\";\r\n\r\nfunction Test({ history }) {\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (success) {\r\n            setTimeout(\r\n                () => history.push(\"/section\"),\r\n                [5000]\r\n            );\r\n        }\r\n        dispatch(createTest(title));\r\n    };\r\n\r\n    const adminDetails = useSelector(\r\n        (state) => state.adminDetails\r\n    );\r\n    const { user } = adminDetails;\r\n\r\n    useEffect(() => {\r\n        dispatch(myDetails());\r\n    }, [dispatch]);\r\n\r\n    const newTest = useSelector((state) => state.newTest);\r\n    const { loading, success, error } = newTest;\r\n\r\n    const toast = useToast();\r\n\r\n    if (success) {\r\n        toast({\r\n            title: \"Notification\",\r\n            description: \"Test created Successfully\",\r\n            status: \"success\",\r\n            duration: 9000,\r\n            isClosable: true,\r\n        });\r\n        dispatch({ type: CREATE_TEST_RESET });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Sidebar />\r\n            <div className=\"admin_container\">\r\n                <Navbar\r\n                    title=\"Test\"\r\n                    name={`${user && user.firstName}`}\r\n                />\r\n                {error && (\r\n                    <Alert>\r\n                        <AlertIcon />\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n                {loading ? (\r\n                    <CircularProgress\r\n                        isIndeterminate\r\n                        color=\"green.300\"\r\n                    />\r\n                ) : (\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"test_image\">\r\n                            <img src={jobexam} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"test_page\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Test\"\r\n                                onChange={(e) =>\r\n                                    setTitle(e.target.value)\r\n                                }\r\n                                value={title}\r\n                                className=\"test_inputs\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"test_btn\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn2\"\r\n                            >\r\n                                Add Test\r\n                            </button>\r\n                            <Link to=\"/section\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn5\"\r\n                                >\r\n                                    Add Section\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Section.css\";\r\n\r\nimport {\r\n    useToast,\r\n    CircularProgress,\r\n    Alert,\r\n    AlertIcon,\r\n} from \"@chakra-ui/react\";\r\nimport { CREATE_SECTION_RESET } from \"../redux/constants/sectionConstants\";\r\nimport { createSection } from \"../redux/actions/sectionActions\";\r\nimport { getTest } from \"../redux/actions/testActions\";\r\n\r\nfunction Section({ history }) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [instruction, setInstruction] = useState(\"\");\r\n    const [timer, setTimer] = useState(\"\");\r\n    const [test, setTest] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            createSection(title, timer, instruction, test)\r\n        );\r\n    };\r\n\r\n    const allTest = useSelector((state) => state.allTest);\r\n    const { test: tests } = allTest;\r\n\r\n    const newSection = useSelector(\r\n        (state) => state.newSection\r\n    );\r\n    const { loading, error, success } = newSection;\r\n\r\n    const toast = useToast();\r\n\r\n    if (success) {\r\n        toast({\r\n            title: \"Notification\",\r\n            description: \"Section created Successfully\",\r\n            status: \"success\",\r\n            duration: 6000,\r\n            isClosable: true,\r\n        });\r\n        dispatch({ type: CREATE_SECTION_RESET });\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getTest());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <Sidebar />\r\n            <div className=\"admin_container\">\r\n                <Navbar title=\"Test\" />\r\n\r\n                {error && (\r\n                    <Alert>\r\n                        <AlertIcon />\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n                {loading ? (\r\n                    <CircularProgress\r\n                        isIndeterminate\r\n                        color=\"green.300\"\r\n                    />\r\n                ) : (\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"section_page\">\r\n                            <div className=\"sec_top\">\r\n                                <label>Test</label>\r\n                            </div>\r\n                            <select\r\n                                className=\"test_input2\"\r\n                                onChange={(e) =>\r\n                                    setTest(e.target.value)\r\n                                }\r\n                            >\r\n                                <option>Select Test</option>\r\n                                {tests &&\r\n                                    tests.map((item, i) => (\r\n                                        <option\r\n                                            key={i}\r\n                                            value={item._id}\r\n                                        >\r\n                                            {item.title}\r\n                                        </option>\r\n                                    ))}\r\n                            </select>\r\n                            <div className=\"sec_top\">\r\n                                <label>Section Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Test\"\r\n                                    onChange={(e) =>\r\n                                        setTitle(\r\n                                            e.target.value\r\n                                        )\r\n                                    }\r\n                                    value={title}\r\n                                    className=\"test_input3\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"sec_top\">\r\n                                <label>\r\n                                    Section Instruction\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Instruction\"\r\n                                    onChange={(e) =>\r\n                                        setInstruction(\r\n                                            e.target.value\r\n                                        )\r\n                                    }\r\n                                    value={instruction}\r\n                                    className=\"test_input4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"sec_top\">\r\n                                <label>Time</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    placeholder=\"Timer\"\r\n                                    onChange={(e) =>\r\n                                        setTimer(\r\n                                            e.target.value\r\n                                        )\r\n                                    }\r\n                                    value={timer}\r\n                                    className=\"test_input5\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"test_btn\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"section_btn\"\r\n                                >\r\n                                    Add Section\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Section;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { viewAllAdmindetails } from \"../redux/actions/userActions\";\r\n\r\nfunction ViewAdmin() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(viewAllAdmindetails());\r\n    }, [dispatch]);\r\n\r\n    const getViewAdmins = useSelector(\r\n        (state) => state.getViewAdmins\r\n    );\r\n    const { getadmin } = getViewAdmins;\r\n\r\n    const arr = getadmin.map((item) => {\r\n        return (\r\n            <tbody>\r\n                <tr>\r\n                    <td>{item.firstName}</td>\r\n                    <td>{item.email}</td>\r\n                    <td>{item.phone}</td>\r\n                </tr>\r\n            </tbody>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"sidebar_view\">\r\n                <Sidebar />\r\n            </div>\r\n            <div className=\"admin_container\">\r\n                <Navbar />\r\n                <Link to=\"/adminregister\">\r\n                    <div className=\"goBack_btn\">\r\n                        <buuton\r\n                            type=\"button\"\r\n                            className=\"btn\"\r\n                        >\r\n                            Go Back\r\n                        </buuton>\r\n                    </div>\r\n                </Link>\r\n                <div className=\"question_table\">\r\n                    <table>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Phone</th>\r\n                        </tr>\r\n                        {arr}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewAdmin;\r\n","export const ADMIN_FORGETPASSWORD_REQUEST =\r\n    \"ADMIN_FORGETPASSWORD_REQUEST\";\r\nexport const ADMIN_FORGETPASSWORD_SUCCESS =\r\n    \"ADMIN_FORGETPASSWORD_SUCCESS\";\r\nexport const ADMIN_FORGETPASSWORD_FAIL =\r\n    \"ADMIN_FORGETPASSWORD_FAIL\";\r\n\r\nexport const ADMIN_RESETPASSWORD_REQUEST =\r\n    \"ADMIN_RESETPASSWORD_REQUEST\";\r\nexport const ADMIN_RESETPASSWORD_SUCCESS =\r\n    \"ADMIN_RESETPASSWORD_SUCCESS\";\r\nexport const ADMIN_RESETPASSWORD_FAIL =\r\n    \"ADMIN_RESETPASSWORD_FAIL\";\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    Alert,\r\n    AlertIcon,\r\n    CircularProgress,\r\n    Center,\r\n} from \"@chakra-ui/react\";\r\nimport { adminForgotPassword } from \"../redux/actions/forgetPasswordAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport \"./PasswordForgot.css\";\r\n\r\nfunction PasswordForgot({ history }) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(adminForgotPassword(email));\r\n    };\r\n\r\n    const forgotPassword = useSelector(\r\n        (state) => state.forgotPassword\r\n    );\r\n\r\n    const { loading, error, success } = forgotPassword;\r\n\r\n    if (success) {\r\n        setTimeout(\r\n            () => history.push(\"/adminlogin\"),\r\n            [5000]\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Sidebar />\r\n            <div className=\"admin_container\">\r\n                <Navbar title=\"Forgot Password\" />\r\n\r\n                {error && (\r\n                    <Alert status=\"error\">\r\n                        <AlertIcon />\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n                {success && (\r\n                    <Alert status=\"success\">\r\n                        <AlertIcon />\r\n                        Check your Email to Retrieve your\r\n                        password\r\n                    </Alert>\r\n                )}\r\n\r\n                {loading ? (\r\n                    <Center>\r\n                        <CircularProgress\r\n                            isIndeterminate\r\n                            color=\"purple.300\"\r\n                        />\r\n                    </Center>\r\n                ) : (\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"inputContainer\">\r\n                            <input\r\n                                type=\"email\"\r\n                                onChange={(e) =>\r\n                                    setEmail(e.target.value)\r\n                                }\r\n                                value={email}\r\n                                placeholder=\"Email Address\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"btnContainer\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                value=\"Submit\"\r\n                                className=\"btn gold\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"remeber_password\">\r\n                            <p className=\"center\">\r\n                                Reset your password?{\" \"}\r\n                                <Link to=\"/resetpassword\">\r\n                                    <strong>\r\n                                        Reset Password\r\n                                    </strong>\r\n                                </Link>\r\n                            </p>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordForgot;\r\n","import axios from \"axios\";\r\nimport {\r\n    ADMIN_FORGETPASSWORD_REQUEST,\r\n    ADMIN_FORGETPASSWORD_SUCCESS,\r\n    ADMIN_FORGETPASSWORD_FAIL,\r\n    ADMIN_RESETPASSWORD_FAIL,\r\n    ADMIN_RESETPASSWORD_SUCCESS,\r\n    ADMIN_RESETPASSWORD_REQUEST,\r\n} from \"../constants/adminForgetPassword\";\r\n\r\nexport const adminForgotPassword =\r\n    (email) => async (dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: ADMIN_FORGETPASSWORD_REQUEST,\r\n            });\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const { data } = await axios.post(\r\n                \"/api/v1/auth/admin/forgotPassword\",\r\n                {\r\n                    email,\r\n                },\r\n                config\r\n            );\r\n            dispatch({\r\n                type: ADMIN_FORGETPASSWORD_SUCCESS,\r\n                payload: data,\r\n            });\r\n            // console.log(data);\r\n            console.log(email);\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ADMIN_FORGETPASSWORD_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const adminResetPassword =\r\n    (email) => async (dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: ADMIN_RESETPASSWORD_REQUEST,\r\n            });\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const { data } = await axios.post(\r\n                \"/api/v1/auth/admin/resetPassword/:resettoken\",\r\n                {\r\n                    email,\r\n                },\r\n                config\r\n            );\r\n            dispatch({\r\n                type: ADMIN_RESETPASSWORD_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ADMIN_RESETPASSWORD_FAIL,\r\n                payload:\r\n                    error.response &&\r\n                    error.response.data.error\r\n                        ? error.response.data.error\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    Alert,\r\n    AlertIcon,\r\n    CircularProgress,\r\n    Center,\r\n} from \"@chakra-ui/react\";\r\nimport { adminResetPassword } from \"../redux/actions/forgetPasswordAction\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport \"./ResetPassword.css\";\r\n\r\nfunction ResetPassword({ history }) {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] =\r\n        useState(\"\");\r\n    const [msg, setMsg] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password === confirmPassword) {\r\n            dispatch(adminResetPassword(password));\r\n        } else {\r\n            setMsg(true);\r\n        }\r\n    };\r\n\r\n    const resetPassword = useSelector(\r\n        (state) => state.resetPassword\r\n    );\r\n    const { loading, error, userInfo } = resetPassword;\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(\"/start\");\r\n        }\r\n    }, [userInfo, history, dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <Sidebar />\r\n            <div className=\"admin_container\">\r\n                <Navbar title=\"Reset Password\" />\r\n\r\n                {error && (\r\n                    <Alert status=\"error\">\r\n                        <AlertIcon />\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n                {msg && (\r\n                    <div className=\"inputContainer2\">\r\n                        <Alert status=\"error\">\r\n                            <AlertIcon />\r\n                            Password does not match\r\n                        </Alert>\r\n                    </div>\r\n                )}\r\n                {loading ? (\r\n                    <Center>\r\n                        <CircularProgress\r\n                            isIndeterminate\r\n                            color=\"purple.300\"\r\n                        />\r\n                    </Center>\r\n                ) : (\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"inputContainer2\">\r\n                            <input\r\n                                type=\"password\"\r\n                                onChange={(e) =>\r\n                                    setPassword(\r\n                                        e.target.value\r\n                                    )\r\n                                }\r\n                                value={password}\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputContainer2\">\r\n                            <input\r\n                                type=\"password\"\r\n                                onChange={(e) =>\r\n                                    setConfirmPassword(\r\n                                        e.target.value\r\n                                    )\r\n                                }\r\n                                value={confirmPassword}\r\n                                placeholder=\"Confirm Password\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"login-reset\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                value=\"Submit\"\r\n                                className=\"btn\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <p className=\"create_account\">\r\n                                Don't Have an account?{\" \"}\r\n                                <Link to=\"/adminregister\">\r\n                                    <strong>Sign Up</strong>\r\n                                </Link>{\" \"}\r\n                                <br></br>\r\n                                <span className=\"sign_up\">\r\n                                    <Link to=\"/passwordforgot\">\r\n                                        Forget password?\r\n                                    </Link>\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport WelcomeScreen from \"./screens/User/WelcomeScreen\";\r\nimport LoginScreen from \"./screens/User/LoginScreen\";\r\nimport RegisterScreen from \"./screens/User/RegisterScreen\";\r\nimport StartScreen from \"./screens/User/StartScreen\";\r\nimport TestScreen from \"./screens/User/TestScreen\";\r\nimport SuccessScreen from \"./screens/User/SuccessScreen\";\r\nimport Forget from \"./screens/User/forget\";\r\nimport ChangePassword from \"./screens/User/changePassword\";\r\nimport Dashboard from \"./screens/Dashboard\";\r\nimport AdminRegister from \"./screens/AdminRegister\";\r\nimport ViewQuestion from \"./screens/ViewQuestion\";\r\nimport Profile from \"./screens/Profile\";\r\nimport QuestionBank from \"./screens/QuestionBank\";\r\nimport AdminLogin from \"./screens/AdminLogin\";\r\nimport Test from \"./screens/Test\";\r\nimport Section from \"./screens/Section\";\r\nimport ViewAdmin from \"./screens/ViewAdmin\";\r\nimport PasswordForgot from \"./screens/PasswordForgot\";\r\nimport ResetPassword from \"./screens/ResetPassword\";\r\n\r\n//import protectedRoute from \"./components/protectedRoute\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route\r\n                    path=\"/\"\r\n                    exact\r\n                    component={WelcomeScreen}\r\n                />\r\n                <Route\r\n                    path=\"/login\"\r\n                    exact\r\n                    component={LoginScreen}\r\n                />\r\n                <Route\r\n                    path=\"/signup\"\r\n                    exact\r\n                    component={RegisterScreen}\r\n                />\r\n                <Route\r\n                    path=\"/start\"\r\n                    exact\r\n                    component={StartScreen}\r\n                />\r\n                <Route\r\n                    path=\"/success\"\r\n                    exact\r\n                    component={SuccessScreen}\r\n                />\r\n                <Route\r\n                    path=\"/test\"\r\n                    exact\r\n                    component={TestScreen}\r\n                />\r\n                <Route\r\n                    path=\"/forget\"\r\n                    exact\r\n                    component={Forget}\r\n                />\r\n                <Route\r\n                    path=\"/changePassword\"\r\n                    exact\r\n                    component={ChangePassword}\r\n                />\r\n                <Route\r\n                    path=\"/adminlogin\"\r\n                    exact\r\n                    component={AdminLogin}\r\n                />\r\n                <Route\r\n                    path=\"/dashboard\"\r\n                    exact\r\n                    component={Dashboard}\r\n                />\r\n                <Route\r\n                    path=\"/adminregister\"\r\n                    exact\r\n                    component={AdminRegister}\r\n                />\r\n                <Route\r\n                    path=\"/profile\"\r\n                    exact\r\n                    component={Profile}\r\n                />\r\n                <Route\r\n                    path=\"/questionbank\"\r\n                    exact\r\n                    component={QuestionBank}\r\n                />\r\n                <Route\r\n                    path=\"/viewquestion\"\r\n                    exact\r\n                    component={ViewQuestion}\r\n                />\r\n                <Route\r\n                    path=\"/adminTest\"\r\n                    exact\r\n                    component={Test}\r\n                />\r\n                <Route\r\n                    path=\"/section\"\r\n                    exact\r\n                    component={Section}\r\n                />\r\n                <Route\r\n                    path=\"/viewadmin\"\r\n                    exact\r\n                    component={ViewAdmin}\r\n                />\r\n\r\n                <Route\r\n                    path=\"/passwordforgot\"\r\n                    exact\r\n                    component={PasswordForgot}\r\n                />\r\n\r\n                <Route\r\n                    path=\"/resetpassword\"\r\n                    exact\r\n                    component={ResetPassword}\r\n                />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  userRegisterReducer,\r\n  userLoginReducer,\r\n  userDetailsReducer,\r\n  forgetPasswordReducer,\r\n  changePasswordReducer,\r\n  adminLoginReducer,\r\n  adminDetailsReducer,\r\n  userSectionsReducer,\r\n  adminRegisterReducer,\r\n  getAllAdminReducer,\r\n  getCandidatesdetailsReducer,\r\n  getViewAdminsReducer,\r\n  \r\n} from \"./reducers/userReducers\";\r\nimport { questionsReducer } from \"./reducers/questionReducer\";\r\nimport { getTestReducer } from \"./reducers/testReducer\";\r\nimport { ResponseReducer } from \"./reducers/responseReducer\";\r\n\r\n\r\nimport { getTestscoreReducer, getTestTimeReducer } from \"./reducers/testscoreReducer\";\r\n\r\n/* admin reducer */\r\nimport {\r\n  adminQuestionsReducer,\r\n  getAllQuestionsReducer,\r\n  getQuestionsByIdReducer,\r\n  testSelectReducer,\r\n  deleteQuestionByIdReducer,\r\n} from \"./reducers/questionReducers\";\r\nimport {\r\n  createTestReducer,\r\n  getTestReducers,\r\n} from \"./reducers/testReducers\";\r\nimport {\r\n  createSectionReducer,\r\n  getSectionReducer,\r\n  getSectionByIdReducer,\r\n} from \"./reducers/sectionReducers\";\r\nimport {\r\n  candidatesFailReducer,\r\n  candidatesPassReducer,\r\n  totalCandidatesReducer,\r\n} from \"./reducers/candidateReducers\";\r\nimport {\r\n  forgetPasswordReducers,\r\n  resetPasswordReducer,\r\n} from \"./reducers/forgetPasswordReducer\";\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n  registration: userRegisterReducer,\r\n  userLogin: userLoginReducer,\r\n  userDetails: userDetailsReducer,\r\n  getquestion: questionsReducer,\r\n  getTest: getTestReducer,\r\n  Response : ResponseReducer,\r\n  Myscore : getTestscoreReducer,\r\n  postforgetpassword: forgetPasswordReducer,\r\n  changepassword : changePasswordReducer,\r\n  getTime : getTestTimeReducer,\r\n  // admin  reducer\r\n  adminRegister: adminRegisterReducer,\r\n  adminLogin: adminLoginReducer,\r\n  adminDetails: adminDetailsReducer,\r\n  userSections: userSectionsReducer,\r\n  adminQuestions: adminQuestionsReducer,\r\n  testOptions: testSelectReducer,\r\n  newTest: createTestReducer,\r\n  allTest: getTestReducers,\r\n  newSection: createSectionReducer,\r\n  allSection: getSectionReducer,\r\n  examSection: getSectionByIdReducer,\r\n  getAllQuestions: getAllQuestionsReducer,\r\n  myAllAdmin: getAllAdminReducer,\r\n  getQuestion: getQuestionsByIdReducer,\r\n  getCandidate: getCandidatesdetailsReducer,\r\n  totalCandidates: totalCandidatesReducer,\r\n  getViewAdmins: getViewAdminsReducer,\r\n  allCandidatePassed: candidatesPassReducer,\r\n  allCandidateFailed: candidatesFailReducer,\r\n  deleteQuestion: deleteQuestionByIdReducer,\r\n  forgotPassword: forgetPasswordReducers,\r\n  resetPassword: resetPasswordReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  adminLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  USER_REGISTRATION_FAIL,\r\n  USER_REGISTRATION_REQUEST,\r\n  USER_REGISTRATION_SUCCESS,\r\n  USER_REGISTRATION_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  FORGET_PASSWORD_FAIL,\r\n  FORGET_PASSWORD_REQUEST,\r\n  FORGET_PASSWORD_SUCCESS,\r\n  CHANGE_PASSWORD_FAIL,\r\n  CHANGE_PASSWORD_REQUEST,\r\n  CHANGE_PASSWORD_SUCCESS,\r\n  // ADMIN\r\n  USERS_REGISTRATION_FAIL,\r\n    USERS_REGISTRATION_REQUEST,\r\n    USERS_REGISTRATION_SUCCESS,\r\n    USERS_REGISTRATION_RESET,\r\n    USERS_LOGIN_FAIL,\r\n    USERS_LOGIN_REQUEST,\r\n    USERS_LOGIN_SUCCESS,\r\n    USERS_LOGOUT,\r\n    USERS_DETAILS_FAIL,\r\n    USERS_DETAILS_REQUEST,\r\n    USERS_DETAILS_SUCCESS,\r\n    USER_SECTION_FAIL,\r\n    USER_SECTION_REQUEST,\r\n    USER_SECTION_SUCCESS,\r\n    GETALLADMIN_FAIL,\r\n    GETALLADMIN_SUCCESS,\r\n    GETALLADMIN_REQUEST,\r\n    GETCANDIDATESDETAILS_FAIL,\r\n    GETCANDIDATESDETAILS_SUCCESS,\r\n    GETCANDIDATESDETAILS_REQUEST,\r\n    USER_VIEWADMIN_FAIL,\r\n    USER_VIEWADMIN_SUCCESS,\r\n    USER_VIEWADMIN_REQUEST,\r\n  \r\n} from \"../constants/userConstants\";\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTRATION_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTRATION_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_REGISTRATION_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_REGISTRATION_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, success: true, user: action.payload.data };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const forgetPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FORGET_PASSWORD_REQUEST:\r\n      return { loading: true };\r\n    case FORGET_PASSWORD_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case FORGET_PASSWORD_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changePasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_PASSWORD_REQUEST:\r\n      return { loading: true };\r\n    case CHANGE_PASSWORD_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case CHANGE_PASSWORD_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n// ADMIN\r\nexport const adminRegisterReducer = (\r\n  state = {},\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n      case USERS_REGISTRATION_REQUEST:\r\n          return { loading: true };\r\n      case USERS_REGISTRATION_SUCCESS:\r\n          return { loading: false, success: true };\r\n      case USERS_REGISTRATION_FAIL:\r\n          return {\r\n              loading: false,\r\n              error: action.payload,\r\n          };\r\n      case USERS_REGISTRATION_RESET:\r\n          return {};\r\n      default:\r\n          return state;\r\n  }\r\n};\r\n\r\nexport const adminLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case USERS_LOGIN_REQUEST:\r\n          return { loading: true };\r\n      case USERS_LOGIN_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              success: true,\r\n              userInfo: action.payload,\r\n          };\r\n      case USERS_LOGIN_FAIL:\r\n          return {\r\n              loading: false,\r\n              error: action.payload,\r\n          };\r\n      case USERS_LOGOUT:\r\n          return {};\r\n      default:\r\n          return state;\r\n  }\r\n};\r\n\r\nexport const adminDetailsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case USERS_DETAILS_REQUEST:\r\n          return { loading: true };\r\n      case USERS_DETAILS_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              success: true,\r\n              user: action.payload.data,\r\n          };\r\n      case USERS_DETAILS_FAIL:\r\n          return {\r\n              loading: false,\r\n              error: action.payload,\r\n          };\r\n      default:\r\n          return state;\r\n  }\r\n};\r\n\r\nexport const userSectionsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case USER_SECTION_REQUEST:\r\n          return { loading: true };\r\n      case USER_SECTION_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              success: true,\r\n              section: action.payload,\r\n          };\r\n      case USER_SECTION_FAIL:\r\n          return {\r\n              loading: false,\r\n              error: action.payload,\r\n          };\r\n      default:\r\n          return state;\r\n  }\r\n};\r\n\r\nexport const getAllAdminReducer = (\r\n  state = { admin: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n      case GETALLADMIN_REQUEST:\r\n          return { ...state, loading: true };\r\n      case GETALLADMIN_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              success: true,\r\n              admin: action.payload.data,\r\n          };\r\n      case GETALLADMIN_FAIL:\r\n          return {\r\n              loading: false,\r\n              error: action.payload,\r\n          };\r\n      default:\r\n          return state;\r\n  }\r\n};\r\n\r\nexport const getCandidatesdetailsReducer = (\r\n  state = { candidates: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n      case GETCANDIDATESDETAILS_REQUEST:\r\n          return { ...state, loading: true };\r\n      case GETCANDIDATESDETAILS_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              success: true,\r\n              candidates: action.payload.data,\r\n          };\r\n      case GETCANDIDATESDETAILS_FAIL:\r\n          return {\r\n              loading: false,\r\n              error: action.payload,\r\n          };\r\n      default:\r\n          return state;\r\n  }\r\n};\r\n\r\nexport const getViewAdminsReducer = (\r\n  state = { getadmin: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n      case USER_VIEWADMIN_REQUEST:\r\n          return { ...state, loading: true };\r\n      case USER_VIEWADMIN_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              success: true,\r\n              getadmin: action.payload.data,\r\n          };\r\n      case USER_VIEWADMIN_FAIL:\r\n          return {\r\n              loading: false,\r\n              error: action.payload,\r\n          };\r\n      default:\r\n          return state;\r\n  }\r\n};\r\n","import {\r\n    QUESTION_REQUEST,\r\n    QUESTION_SUCCESS,\r\n    QUESTION_FAIL,\r\n    SCORE_REQUEST,\r\n    SCORE_SUCCESS,\r\n    SCORE_FAIL,\r\n} from  \"../constants/questionConstant\";\r\n\r\nexport const questionsReducer = (state = {questions:[]}, action) => {\r\n    switch (action.type) {\r\n      case QUESTION_REQUEST:\r\n        return { loading: true };\r\n      case QUESTION_SUCCESS:\r\n        return { loading: false, success: true, questions: action.payload.data };\r\n      case QUESTION_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport const scoreReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case SCORE_REQUEST:\r\n      return { loading: true };\r\n    case SCORE_SUCCESS:\r\n      return { loading: false, success: true};\r\n    case SCORE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n","import {\r\n  GET_ALL_TEST_FAIL,\r\n  GET_ALL_TEST_REQUEST,\r\n  GET_ALL_TEST_SUCCESS,\r\n} from \"../constants/testConstants\";\r\n\r\nexport const getTestReducer = (state = { test: [] }, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_TEST_REQUEST:\r\n      return { loading: true };\r\n    case GET_ALL_TEST_SUCCESS:\r\n      return { loading: false, success: true, test: action.payload.data };\r\n    case GET_ALL_TEST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n    RESPONSE_REQUEST,\r\n    RESPONSE_SUCCESS,\r\n    RESPONSE_FAIL,\r\n} from  \"../constants/responseConstant\";\r\n\r\nexport const ResponseReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case RESPONSE_REQUEST:\r\n        return { loading: true };\r\n      case RESPONSE_SUCCESS:\r\n        return { loading: false, success: true };\r\n      case RESPONSE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };","import {\r\n    TESTSCORE_FAIL,\r\n    TESTSCORE_REQUEST,\r\n    TESTSCORE_SUCCESS,\r\n    TEST_TIME_FAIL,\r\n    TEST_TIME_REQUEST,\r\n    TEST_TIME_SUCCESS,\r\n  } from \"../constants/testscoreConstants\";\r\n\r\n  export const getTestscoreReducer = (state = { testscore: 0 }, action) => {\r\n    switch (action.type) {\r\n      case TESTSCORE_REQUEST:\r\n        return { \r\n          ...state,loading: true };\r\n      case TESTSCORE_SUCCESS:\r\n        return { loading: false, success: true, testscore: action.payload.data[0].score};\r\n      case TESTSCORE_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const getTestTimeReducer = (state = { testTime:0 }, action) => {\r\n    switch (action.type) {\r\n      case TEST_TIME_REQUEST:\r\n        return { \r\n          ...state,loading: true };\r\n      case TEST_TIME_SUCCESS:\r\n        return { loading: false, success: true, testTime: action.payload.data.timer}; \r\n      case TEST_TIME_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import {\r\n    QUESTIONS_FAIL,\r\n    QUESTIONS_SUCCESS,\r\n    QUESTIONS_REQUEST,\r\n    TEST_FAIL,\r\n    TEST_SUCCESS,\r\n    TEST_REQUEST,\r\n    USER_GETALLQUESTIONS_REQUEST,\r\n    USER_GETALLQUESTIONS_SUCCESS,\r\n    USER_GETALLQUESTIONS_FAIL,\r\n    GET_QUESTION_BYID_REQUEST,\r\n    GET_QUESTION_BYID_SUCCESS,\r\n    GET_QUESTION_BYID_FAIL,\r\n    DELETE_QUESTION_BYID_REQUEST,\r\n    DELETE_QUESTION_BYID_SUCCESS,\r\n    DELETE_QUESTION_BYID_FAIL,\r\n    QUESTIONS_RESET,\r\n} from \"../constants/questionConstants\";\r\n\r\nexport const adminQuestionsReducer = (\r\n    state = {},\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case QUESTIONS_REQUEST:\r\n            return { loading: true };\r\n        case QUESTIONS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                question: action.payload,\r\n            };\r\n        case QUESTIONS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case QUESTIONS_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const testSelectReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case TEST_REQUEST:\r\n            return { loading: true };\r\n        case TEST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                test: action.payload,\r\n            };\r\n        case TEST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getAllQuestionsReducer = (\r\n    state = { questions: [] },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case USER_GETALLQUESTIONS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_GETALLQUESTIONS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                questions: action.payload,\r\n            };\r\n        case USER_GETALLQUESTIONS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getQuestionsByIdReducer = (\r\n    state = { questions: [] },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case GET_QUESTION_BYID_REQUEST:\r\n            return { ...state, loading: true };\r\n        case GET_QUESTION_BYID_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                questions: action.payload.data,\r\n            };\r\n        case GET_QUESTION_BYID_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const deleteQuestionByIdReducer = (\r\n    state = { deleteById: [] },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case DELETE_QUESTION_BYID_REQUEST:\r\n            return { ...state, loading: true };\r\n        case DELETE_QUESTION_BYID_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                questions: action.payload.data,\r\n            };\r\n        case DELETE_QUESTION_BYID_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    CREATE_TEST_FAIL,\r\n    CREATE_TEST_SUCCESS,\r\n    CREATE_TEST_REQUEST,\r\n    CREATE_TEST_RESET,\r\n    GET_TEST_FAIL,\r\n    GET_TEST_SUCCESS,\r\n    GET_TEST_REQUEST,\r\n} from \"../constants/testConstants\";\r\n\r\nexport const createTestReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CREATE_TEST_REQUEST:\r\n            return { loading: true };\r\n        case CREATE_TEST_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case CREATE_TEST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case CREATE_TEST_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getTestReducers = (\r\n    state = { test: [] },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case GET_TEST_REQUEST:\r\n            return { ...state, loading: true };\r\n        case GET_TEST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                test: action.payload.data,\r\n            };\r\n        case GET_TEST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    CREATE_SECTION_FAIL,\r\n    CREATE_SECTION_SUCCESS,\r\n    CREATE_SECTION_REQUEST,\r\n    CREATE_SECTION_RESET,\r\n    GET_SECTION_FAIL,\r\n    GET_SECTION_SUCCESS,\r\n    GET_SECTION_REQUEST,\r\n    GET_SECTION_BYID_REQUEST,\r\n    GET_SECTION_BYID_FAIL,\r\n    GET_SECTION_BYID_SUCCESS,\r\n} from \"../constants/sectionConstants\";\r\n\r\nexport const createSectionReducer = (\r\n    state = {},\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case CREATE_SECTION_REQUEST:\r\n            return { loading: true };\r\n        case CREATE_SECTION_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case CREATE_SECTION_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case CREATE_SECTION_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getSectionReducer = (\r\n    state = { section: [] },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case GET_SECTION_REQUEST:\r\n            return { ...state, loading: true };\r\n        case GET_SECTION_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                section: action.payload.data,\r\n            };\r\n        case GET_SECTION_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getSectionByIdReducer = (\r\n    state = { sections: [] },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case GET_SECTION_BYID_REQUEST:\r\n            return { ...state, loading: true };\r\n        case GET_SECTION_BYID_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                sections: action.payload.data,\r\n            };\r\n        case GET_SECTION_BYID_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    GET_TOTALCANDIDATES_REQUEST,\r\n    GET_TOTALCANDIDATES_SUCCESS,\r\n    GET_TOTALCANDIDATES_FAIL,\r\n    GET_CANDIDATESPASSED_REQUEST,\r\n    GET_CANDIDATESPASSED_SUCCESS,\r\n    GET_CANDIDATESPASSED_FAIL,\r\n    GET_CANDIDATESFAILED_FAIL,\r\n    GET_CANDIDATESFAILED_SUCCESS,\r\n    GET_CANDIDATESFAILED_REQUEST,\r\n} from \"../constants/candidateConstants\";\r\n\r\nexport const totalCandidatesReducer = (\r\n    state = { candidate: [] },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case GET_TOTALCANDIDATES_REQUEST:\r\n            return { ...state, loading: true };\r\n        case GET_TOTALCANDIDATES_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                candidate: action.payload.data,\r\n            };\r\n        case GET_TOTALCANDIDATES_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const candidatesPassReducer = (\r\n    state = { candidatepass: [] },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case GET_CANDIDATESPASSED_REQUEST:\r\n            return { ...state, loading: true };\r\n        case GET_CANDIDATESPASSED_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                candidatepass: action.payload.data,\r\n            };\r\n        case GET_CANDIDATESPASSED_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const candidatesFailReducer = (\r\n    state = { candidatefail: [] },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case GET_CANDIDATESFAILED_REQUEST:\r\n            return { ...state, loading: true };\r\n        case GET_CANDIDATESFAILED_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                candidatefail: action.payload.data,\r\n            };\r\n        case GET_CANDIDATESFAILED_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    ADMIN_FORGETPASSWORD_REQUEST,\r\n    ADMIN_FORGETPASSWORD_SUCCESS,\r\n    ADMIN_FORGETPASSWORD_FAIL,\r\n    ADMIN_RESETPASSWORD_REQUEST,\r\n    ADMIN_RESETPASSWORD_SUCCESS,\r\n    ADMIN_RESETPASSWORD_FAIL,\r\n} from \"../constants/adminForgetPassword\";\r\n\r\nexport const forgetPasswordReducers = (\r\n    state = {},\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ADMIN_FORGETPASSWORD_REQUEST:\r\n            return { loading: true };\r\n        case ADMIN_FORGETPASSWORD_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case ADMIN_FORGETPASSWORD_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const resetPasswordReducer = (\r\n    state = {},\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ADMIN_RESETPASSWORD_REQUEST:\r\n            return { loading: true };\r\n        case ADMIN_RESETPASSWORD_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case ADMIN_RESETPASSWORD_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ChakraProvider>\r\n      <App />\r\n    </ChakraProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2MPd3\",\"circle\":\"styles_circle__1YpKH\",\"slider\":\"styles_slider__194Ug\",\"indicator\":\"styles_indicator__3aEBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"styles_navigation__2ClFV\",\"title\":\"styles_title__32pl7\",\"btnContainer\":\"styles_btnContainer__3eDIg\",\"paddingTop\":\"styles_paddingTop__27JYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"styles_grid__33vJd\",\"card\":\"styles_card__1BQU7\",\"customPadding\":\"styles_customPadding__1OrmR\",\"center\":\"styles_center__3_3Yg\",\"pagePadding\":\"styles_pagePadding__SpnXP\",\"formGrid\":\"styles_formGrid__2j61k\",\"form\":\"styles_form__2CYaO\",\"inputContainer\":\"styles_inputContainer__-5vUc\",\"border\":\"styles_border__3pkiT\",\"removePadding\":\"styles_removePadding__1Rl0t\",\"purple\":\"styles_purple__1Z7iQ\",\"scores\":\"styles_scores__mA2hf\",\"justifyCenter\":\"styles_justifyCenter__cdPxx\",\"timer\":\"styles_timer__3zf4w\",\"marginTop\":\"styles_marginTop__3GZCa\",\"spaceleft\":\"styles_spaceleft__1Vn7K\",\"section\":\"styles_section__s33vB\",\"instruction\":\"styles_instruction__2IeaO\",\"question\":\"styles_question__3Yknf\",\"display\":\"styles_display__1Hb7V\"};"],"sourceRoot":""}